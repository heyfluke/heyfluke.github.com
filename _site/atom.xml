<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Luke同学的牢骚</title>
 <link href="http://gotomato.tk/atom.xml" rel="self"/>
 <link href="http://gotomato.tk"/>
 <updated>2013-02-06T02:55:14+08:00</updated>
 <id>http://gotomato.tk</id>
 <author>
   <name>Yongchao Lao</name>
   <email>fluke.l@gmail.com</email>
 </author>

 
 <entry>
   <title>测试Hello world</title>
   <link href="http://gotomato.tk/2013/02/06/hello-world"/>
   <updated>2013-02-06T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2013/02/06/hello-world</id>
   <content type="html">&lt;p&gt;测试测试&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>笔迹平滑的应用</title>
   <link href="http://gotomato.tk/2013/02/%e7%ac%94%e8%bf%b9%e5%b9%b3%e6%bb%91%e7%9a%84%e5%ba%94%e7%94%a8/"/>
   <updated>2013-02-04T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2013/02/%e7%ac%94%e8%bf%b9%e5%b9%b3%e6%bb%91%e7%9a%84%e5%ba%94%e7%94%a8</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;如果在做一个手写笔迹的应用的话，那一定会遇到曲线平滑的问题，因为在手写设备上边写文字往往会出现笔迹抖动的现象，即采集到的点会出现波动，看起来会比较难看（不像真迹），一个常见的处理方式是把曲线平滑化，即在采集点之间沿着某种平滑曲线进行差值画点，而不是直接把点用直线相连。&lt;/p&gt;

&lt;p&gt;&lt;a href='http://en.wikipedia.org/wiki/Bézier_curve'&gt;贝塞尔曲线（Bezier Curve）&lt;/a&gt;是常见的一种曲线，它由若干个控制点来控制曲线摆动的方式，具体可以参考wikipedia上面的说明。简单说明一下，n阶贝塞尔曲线就是由n 1个点组成，其中中间的n-1个点作为控制点存在，曲线路径会逼近控制点（如果控制点和前后点在同一直线上的话，在这种特例下曲线退化成直线），视觉上看好像某种力场弯曲了曲线的路径。&lt;/p&gt;

&lt;p&gt;在这里我用2阶贝塞尔曲线来实现平滑化，头疼的是控制点的设置，需要凭空制定出来。我采用的方式能够在多数情况下保证曲线很趋近用户写出来的，但并不一定经过笔迹采样的实际点，因为我用这些采样点来做控制点，用前后采样点的中点来做笔迹点。譬如用户写的时候采样到了 P0,P1,P2，那我就在P0,P1之间取线性中点mid0，在P1,P2之间取mid1，然后在P0到mid0之间和mid1,P2之间连接直线，在mid0和mid1之间用贝塞尔曲线控制，控制点为P1。&lt;/p&gt;

&lt;p&gt;2阶贝塞尔曲线的算法写出来如下：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;float t = 0.0f;&lt;/p&gt;

&lt;p&gt;            for(unsigned int i = ; i &amp;lt; distance; i )&lt;/p&gt;

&lt;p&gt;            {&lt;/p&gt;

&lt;p&gt;                CCPoint p;&lt;/p&gt;

&lt;p&gt;                p.x = powf(1 – t, 2) * pStart-&amp;gt;x 2.0f * (1 – t) * t * pControl-&amp;gt;x t * t * pEnd-&amp;gt;x;&lt;/p&gt;

&lt;p&gt;                p.y = powf(1 – t, 2) * pStart-&amp;gt;y 2.0f * (1 – t) * t * pControl-&amp;gt;y t * t * pEnd-&amp;gt;y;&lt;/p&gt;

&lt;p&gt;                t = 1.0f / distance;&lt;/p&gt;

&lt;p&gt;            }&lt;br /&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这种情况下，产生的笔迹和采样点如下，可见采样不够密集的时候（写得快的时候）会出现比较明显的笔迹不在采样点上面的情况：&lt;/p&gt;

&lt;p&gt;&lt;img src='/wp-content/uploads/ckfinder/images/Snip20130204_3.png' alt='' /&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>贴一个Amazon EC2的micro实例的benchmark</title>
   <link href="http://gotomato.tk/2013/02/%e8%b4%b4%e4%b8%80%e4%b8%aaamazon-ec2%e7%9a%84micro%e5%ae%9e%e4%be%8b%e7%9a%84benchmark/
/"/>
   <updated>2013-02-03T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2013/02/%e8%b4%b4%e4%b8%80%e4%b8%aaamazon-ec2%e7%9a%84micro%e5%ae%9e%e4%be%8b%e7%9a%84benchmark/%e8%b4%b4%e4%b8%80%e4%b8%aaamazon-ec2%e7%9a%84micro%e5%ae%9e%e4%be%8b%e7%9a%84benchmark</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;性能比较烂，如果不需要考虑灵活横向扩展资源以及哪些专用基础设施的话，那建议还是上linode等知名的vps。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;make&lt;span&gt;1&lt;/span&gt;: Leaving directory &lt;code&gt;/tmp/unixbench-5.1.2&amp;#39;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;sh: 1: 3dinfo: not found&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;   # # # # # # # ##### ###### # # #### # #&lt;/p&gt;

&lt;p&gt;   # # ## # # # # # # # ## # # # # #&lt;/p&gt;

&lt;p&gt;   # # # # # # ## ##### ##### # # # # ######&lt;/p&gt;

&lt;p&gt;   # # # # # # ## # # # # # # # # #&lt;/p&gt;

&lt;p&gt;   # # # ## # # # # # # # ## # # # #&lt;/p&gt;

&lt;p&gt;    #### # # # # # ##### ###### # # #### # #&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;   Version 5.1.2 Based on the Byte Magazine Unix Benchmark&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;   Multi-CPU version Version 5 revisions by Ian Smith,&lt;/p&gt;

&lt;p&gt;                                      Sunnyvale, CA, USA&lt;/p&gt;

&lt;p&gt;   December 22, 2007 johantheghost at yahoo period com&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;1 x Dhrystone 2 using register variables 1 2 3 4 5 6 7 8 9 10&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;1 x Double-Precision Whetstone 1 2 3 4 5 6 7 8 9 10&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;1 x Execl Throughput 1 2 3&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;1 x File Copy 1024 bufsize 2000 maxblocks 1 2 3&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;1 x File Copy 256 bufsize 500 maxblocks 1 2 3&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;1 x File Copy 4096 bufsize 8000 maxblocks 1 2 3&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;1 x Pipe Throughput 1 2 3 4 5 6 7 8 9 10&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;1 x Pipe-based Context Switching 1 2 3 4 5 6 7 8 9 10&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;1 x Process Creation 1 2 3&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;1 x System Call Overhead 1 2 3 4 5 6 7 8 9 10&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;1 x Shell Scripts (1 concurrent) 1 2 3&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;1 x Shell Scripts (8 concurrent) 1 2 3&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;   BYTE UNIX Benchmarks (Version 5.1.2)&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;   System: ip-10-158-198-5: GNU/Linux&lt;/p&gt;

&lt;p&gt;   OS: GNU/Linux — 3.2.0-31-virtual — #50-Ubuntu SMP Fri Sep 7 16:36:36 UTC 2012&lt;/p&gt;

&lt;p&gt;   Machine: x86_64 (x86_64)&lt;/p&gt;

&lt;p&gt;   Language: en_US.utf8 (charmap=&amp;#8221;UTF-8&amp;#8221;, collate=&amp;#8221;UTF-8&amp;#8221;)&lt;/p&gt;

&lt;p&gt;   CPU 0: Intel(R) Xeon(R) CPU E5645 @ 2.40GHz (3999.9 bogomips)&lt;/p&gt;

&lt;p&gt;          Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET&lt;/p&gt;

&lt;p&gt;   15:00:57 up 19:22, 1 user, load average: 0.32, 0.11, 0.08; run level 2&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;————————————————————————&lt;/p&gt;

&lt;p&gt;Benchmark Run: Sat Feb 02 2013 15:00:57 – 15:31:12&lt;/p&gt;

&lt;p&gt;1 CPU in system; running 1 parallel copy of tests&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Dhrystone 2 using register variables 9257467.2 lps (10.1 s, 7 samples)&lt;/p&gt;

&lt;p&gt;Double-Precision Whetstone 1412.6 MWIPS (17.2 s, 7 samples)&lt;/p&gt;

&lt;p&gt;Execl Throughput 424.3 lps (29.8 s, 2 samples)&lt;/p&gt;

&lt;p&gt;File Copy 1024 bufsize 2000 maxblocks 102253.8 KBps (30.1 s, 2 samples)&lt;/p&gt;

&lt;p&gt;File Copy 256 bufsize 500 maxblocks 21627.7 KBps (30.1 s, 2 samples)&lt;/p&gt;

&lt;p&gt;File Copy 4096 bufsize 8000 maxblocks 265826.1 KBps (30.1 s, 2 samples)&lt;/p&gt;

&lt;p&gt;Pipe Throughput 76852.8 lps (10.1 s, 7 samples)&lt;/p&gt;

&lt;p&gt;Pipe-based Context Switching 12908.4 lps (10.1 s, 7 samples)&lt;/p&gt;

&lt;p&gt;Process Creation 801.0 lps (30.1 s, 2 samples)&lt;/p&gt;

&lt;p&gt;Shell Scripts (1 concurrent) 595.0 lpm (60.3 s, 2 samples)&lt;/p&gt;

&lt;p&gt;Shell Scripts (8 concurrent) 60.8 lpm (61.2 s, 2 samples)&lt;/p&gt;

&lt;p&gt;System Call Overhead 58984.2 lps (10.1 s, 7 samples)&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;System Benchmarks Index Values BASELINE RESULT INDEX&lt;/p&gt;

&lt;p&gt;Dhrystone 2 using register variables 116700.0 9257467.2 793.3&lt;/p&gt;

&lt;p&gt;Double-Precision Whetstone 55.0 1412.6 256.8&lt;/p&gt;

&lt;p&gt;Execl Throughput 43.0 424.3 98.7&lt;/p&gt;

&lt;p&gt;File Copy 1024 bufsize 2000 maxblocks 3960.0 102253.8 258.2&lt;/p&gt;

&lt;p&gt;File Copy 256 bufsize 500 maxblocks 1655.0 21627.7 130.7&lt;/p&gt;

&lt;p&gt;File Copy 4096 bufsize 8000 maxblocks 5800.0 265826.1 458.3&lt;/p&gt;

&lt;p&gt;Pipe Throughput 12440.0 76852.8 61.8&lt;/p&gt;

&lt;p&gt;Pipe-based Context Switching 4000.0 12908.4 32.3&lt;/p&gt;

&lt;p&gt;Process Creation 126.0 801.0 63.6&lt;/p&gt;

&lt;p&gt;Shell Scripts (1 concurrent) 42.4 595.0 140.3&lt;/p&gt;

&lt;p&gt;Shell Scripts (8 concurrent) 6.0 60.8 101.3&lt;/p&gt;

&lt;p&gt;System Call Overhead 15000.0 58984.2 39.3&lt;/p&gt;

&lt;p&gt;                                                                   ========&lt;/p&gt;

&lt;p&gt;System Benchmarks Index Score 129.4&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;http://www.ctohome.com/FuWuQi/c5/172.html&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;ubuntu@ip-10-158-198-5:/tmp$ cat /proc/cpuinfo &lt;/p&gt;

&lt;p&gt;processor : 0&lt;/p&gt;

&lt;p&gt;vendor_id : GenuineIntel&lt;/p&gt;

&lt;p&gt;cpu family : 6&lt;/p&gt;

&lt;p&gt;model : 44&lt;/p&gt;

&lt;p&gt;model name : Intel(R) Xeon(R) CPU E5645 @ 2.40GHz&lt;/p&gt;

&lt;p&gt;stepping : 2&lt;/p&gt;

&lt;p&gt;microcode : 0×13&lt;/p&gt;

&lt;p&gt;cpu MHz : 1999.976&lt;/p&gt;

&lt;p&gt;cache size : 12288 KB&lt;/p&gt;

&lt;p&gt;physical id : 0&lt;/p&gt;

&lt;p&gt;siblings : 1&lt;/p&gt;

&lt;p&gt;core id : 0&lt;/p&gt;

&lt;p&gt;cpu cores : 1&lt;/p&gt;

&lt;p&gt;apicid : 0&lt;/p&gt;

&lt;p&gt;initial apicid : 18&lt;/p&gt;

&lt;p&gt;fpu : yes&lt;/p&gt;

&lt;p&gt;fpu_exception : yes&lt;/p&gt;

&lt;p&gt;cpuid level : 11&lt;/p&gt;

&lt;p&gt;wp : yes&lt;/p&gt;

&lt;p&gt;flags : fpu de tsc msr pae cx8 sep cmov pat clflush mmx fxsr sse sse2 ss ht syscall nx lm constant_tsc up rep_good nopl nonstop_tsc pni pclmulqdq ssse3 cx16 pcid sse4_1 sse4_2 popcnt aes hypervisor lahf_lm&lt;/p&gt;

&lt;p&gt;bogomips : 3999.95&lt;/p&gt;

&lt;p&gt;clflush size : 64&lt;/p&gt;

&lt;p&gt;cache_alignment : 64&lt;/p&gt;

&lt;p&gt;address sizes : 40 bits physical, 48 bits virtual&lt;/p&gt;

&lt;p&gt;power management:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;ubuntu@ip-10-158-198-5:/tmp$ free&lt;/p&gt;

&lt;p&gt;             total used free shared buffers cached&lt;/p&gt;

&lt;p&gt;Mem: 604376 522304 82072 0 29612 412976&lt;/p&gt;

&lt;p&gt;-/ buffers/cache: 79716 524660&lt;/p&gt;

&lt;p&gt;Swap: 0 0 0&lt;/p&gt;

&lt;p&gt;ubuntu@ip-10-158-198-5:/tmp$&lt;br /&gt; &lt;/p&gt;

&lt;p&gt;另外作为对比，贴一下另外一个vps的：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;768M budgetvm xen&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h1 id='id2' /&gt;

&lt;h1 id='id3' /&gt;

&lt;h1 id='id4' /&gt;

&lt;h1 id='id5' /&gt;

&lt;h1 id='id6' /&gt;

&lt;h4 id='id7' /&gt;

&lt;p&gt;Version 5.1.2 Based on the Byte Magazine Unix Benchmark&lt;/p&gt;

&lt;p&gt;Multi-CPU version Version 5 revisions by Ian Smith,&lt;br /&gt;Sunnyvale, CA, USA&lt;br /&gt;December 22, 2007 johantheghost at yahoo period com&lt;/p&gt;

&lt;p&gt;1 x Dhrystone 2 using register variables 1 2 3 4 5 6 7 8 9 10&lt;/p&gt;

&lt;p&gt;1 x Double-Precision Whetstone 1 2 3 4 5 6 7 8 9 10&lt;/p&gt;

&lt;p&gt;1 x Execl Throughput 1 2 3&lt;/p&gt;

&lt;p&gt;1 x File Copy 1024 bufsize 2000 maxblocks 1 2 3&lt;/p&gt;

&lt;p&gt;1 x File Copy 256 bufsize 500 maxblocks 1 2 3&lt;/p&gt;

&lt;p&gt;1 x File Copy 4096 bufsize 8000 maxblocks 1 2 3&lt;/p&gt;

&lt;p&gt;1 x Pipe Throughput 1 2 3 4 5 6 7 8 9 10&lt;/p&gt;

&lt;p&gt;1 x Pipe-based Context Switching 1 2 3 4 5 6 7 8 9 10&lt;/p&gt;

&lt;p&gt;1 x Process Creation 1 2 3&lt;/p&gt;

&lt;p&gt;1 x System Call Overhead 1 2 3 4 5 6 7 8 9 10&lt;/p&gt;

&lt;p&gt;1 x Shell Scripts (1 concurrent) 1 2 3&lt;/p&gt;

&lt;p&gt;1 x Shell Scripts (8 concurrent) 1 2 3&lt;/p&gt;

&lt;p&gt;3 x Dhrystone 2 using register variables 1 2 3 4 5 6 7 8 9 10&lt;/p&gt;

&lt;p&gt;3 x Double-Precision Whetstone 1 2 3 4 5 6 7 8 9 10&lt;/p&gt;

&lt;p&gt;3 x Execl Throughput 1 2 3&lt;/p&gt;

&lt;p&gt;3 x File Copy 1024 bufsize 2000 maxblocks 1 2 3&lt;/p&gt;

&lt;p&gt;3 x File Copy 256 bufsize 500 maxblocks 1 2 3&lt;/p&gt;

&lt;p&gt;3 x File Copy 4096 bufsize 8000 maxblocks 1 2 3&lt;/p&gt;

&lt;p&gt;3 x Pipe Throughput 1 2 3 4 5 6 7 8 9 10&lt;/p&gt;

&lt;p&gt;3 x Pipe-based Context Switching 1 2 3 4 5 6 7 8 9 10&lt;/p&gt;

&lt;p&gt;3 x Process Creation 1 2 3&lt;/p&gt;

&lt;p&gt;3 x System Call Overhead 1 2 3 4 5 6 7 8 9 10&lt;/p&gt;

&lt;p&gt;3 x Shell Scripts (1 concurrent) 1 2 3&lt;/p&gt;

&lt;p&gt;3 x Shell Scripts (8 concurrent) 1 2 3&lt;/p&gt;

&lt;p&gt;BYTE UNIX Benchmarks (Version 5.1.2)&lt;/p&gt;

&lt;p&gt;System: syncapi.com: GNU/Linux&lt;br /&gt;OS: GNU/Linux — 3.2.0-24-virtual — #37-Ubuntu SMP Wed Apr 25 12:51:49 UTC 2012&lt;br /&gt;Machine: i686 (i386)&lt;br /&gt;Language: en_US.utf8 (charmap=&amp;#8221;UTF-8&amp;#8221;, collate=&amp;#8221;UTF-8&amp;#8221;)&lt;br /&gt;CPU 0: Intel(R) Xeon(R) CPU E5-2620 0 @ 2.00GHz (4000.1 bogomips)&lt;br /&gt;Hyper-Threading, MMX, Physical Address Ext, SYSENTER/SYSEXIT&lt;br /&gt;CPU 1: Intel(R) Xeon(R) CPU E5-2620 0 @ 2.00GHz (4000.1 bogomips)&lt;br /&gt;Hyper-Threading, MMX, Physical Address Ext, SYSENTER/SYSEXIT&lt;br /&gt;CPU 2: Intel(R) Xeon(R) CPU E5-2620 0 @ 2.00GHz (4000.1 bogomips)&lt;br /&gt;Hyper-Threading, MMX, Physical Address Ext, SYSENTER/SYSEXIT&lt;br /&gt;14:57:48 up 16 min, 1 user, load average: 0.05, 0.23, 0.17; runlevel 2&lt;/p&gt;

&lt;p&gt;————————————————————————&lt;br /&gt;Benchmark Run: Mon Nov 26 2012 14:57:48 – 15:25:51&lt;br /&gt;3 CPUs in system; running 1 parallel copy of tests&lt;/p&gt;

&lt;p&gt;Dhrystone 2 using register variables 9460536.2 lps (10.0 s, 7 samples)&lt;br /&gt;Double-Precision Whetstone 1819.3 MWIPS (10.4 s, 7 samples)&lt;br /&gt;Execl Throughput 446.6 lps (29.7 s, 2 samples)&lt;br /&gt;File Copy 1024 bufsize 2000 maxblocks 166475.6 KBps (30.0 s, 2 samples)&lt;br /&gt;File Copy 256 bufsize 500 maxblocks 49369.0 KBps (30.0 s, 2 samples)&lt;br /&gt;File Copy 4096 bufsize 8000 maxblocks 495627.4 KBps (30.0 s, 2 samples)&lt;br /&gt;Pipe Throughput 98511.1 lps (10.0 s, 7 samples)&lt;br /&gt;Pipe-based Context Switching 8241.9 lps (10.0 s, 7 samples)&lt;br /&gt;Process Creation 1081.0 lps (30.0 s, 2 samples)&lt;br /&gt;Shell Scripts (1 concurrent) 1703.7 lpm (60.0 s, 2 samples)&lt;br /&gt;Shell Scripts (8 concurrent) 428.5 lpm (60.1 s, 2 samples)&lt;br /&gt;System Call Overhead 349054.2 lps (10.0 s, 7 samples)&lt;/p&gt;

&lt;p&gt;System Benchmarks Index Values BASELINE RESULT INDEX&lt;br /&gt;Dhrystone 2 using register variables 116700.0 9460536.2 810.7&lt;br /&gt;Double-Precision Whetstone 55.0 1819.3 330.8&lt;br /&gt;Execl Throughput 43.0 446.6 103.8&lt;br /&gt;File Copy 1024 bufsize 2000 maxblocks 3960.0 166475.6 420.4&lt;br /&gt;File Copy 256 bufsize 500 maxblocks 1655.0 49369.0 298.3&lt;br /&gt;File Copy 4096 bufsize 8000 maxblocks 5800.0 495627.4 854.5&lt;br /&gt;Pipe Throughput 12440.0 98511.1 79.2&lt;br /&gt;Pipe-based Context Switching 4000.0 8241.9 20.6&lt;br /&gt;Process Creation 126.0 1081.0 85.8&lt;br /&gt;Shell Scripts (1 concurrent) 42.4 1703.7 401.8&lt;br /&gt;Shell Scripts (8 concurrent) 6.0 428.5 714.2&lt;/p&gt;

&lt;h1 id='system_call_overhead_150000_3490542_2327'&gt;System Call Overhead 15000.0 349054.2 232.7&lt;/h1&gt;

&lt;p&gt;System Benchmarks Index Score 234.7&lt;/p&gt;

&lt;p&gt;————————————————————————&lt;br /&gt;Benchmark Run: Mon Nov 26 2012 15:25:51 – 15:54:07&lt;br /&gt;3 CPUs in system; running 3 parallel copies of tests&lt;/p&gt;

&lt;p&gt;Dhrystone 2 using register variables 24001583.7 lps (10.0 s, 7 samples)&lt;br /&gt;Double-Precision Whetstone 4815.2 MWIPS (11.1 s, 7 samples)&lt;br /&gt;Execl Throughput 1435.9 lps (29.9 s, 2 samples)&lt;br /&gt;File Copy 1024 bufsize 2000 maxblocks 250817.5 KBps (30.0 s, 2 samples)&lt;br /&gt;File Copy 256 bufsize 500 maxblocks 69379.3 KBps (30.0 s, 2 samples)&lt;br /&gt;File Copy 4096 bufsize 8000 maxblocks 749753.0 KBps (30.0 s, 2 samples)&lt;br /&gt;Pipe Throughput 609289.2 lps (10.0 s, 7 samples)&lt;br /&gt;Pipe-based Context Switching 68117.4 lps (10.0 s, 7 samples)&lt;br /&gt;Process Creation 2632.3 lps (30.0 s, 2 samples)&lt;br /&gt;Shell Scripts (1 concurrent) 2829.5 lpm (60.1 s, 2 samples)&lt;br /&gt;Shell Scripts (8 concurrent) 443.4 lpm (60.2 s, 2 samples)&lt;br /&gt;System Call Overhead 879496.8 lps (10.0 s, 7 samples)&lt;/p&gt;

&lt;p&gt;System Benchmarks Index Values BASELINE RESULT INDEX&lt;br /&gt;Dhrystone 2 using register variables 116700.0 24001583.7 2056.7&lt;br /&gt;Double-Precision Whetstone 55.0 4815.2 875.5&lt;br /&gt;Execl Throughput 43.0 1435.9 333.9&lt;br /&gt;File Copy 1024 bufsize 2000 maxblocks 3960.0 250817.5 633.4&lt;br /&gt;File Copy 256 bufsize 500 maxblocks 1655.0 69379.3 419.2&lt;br /&gt;File Copy 4096 bufsize 8000 maxblocks 5800.0 749753.0 1292.7&lt;br /&gt;Pipe Throughput 12440.0 609289.2 489.8&lt;br /&gt;Pipe-based Context Switching 4000.0 68117.4 170.3&lt;br /&gt;Process Creation 126.0 2632.3 208.9&lt;br /&gt;Shell Scripts (1 concurrent) 42.4 2829.5 667.3&lt;br /&gt;Shell Scripts (8 concurrent) 6.0 443.4 739.0&lt;/p&gt;

&lt;h1 id='system_call_overhead_150000_8794968_5863'&gt;System Call Overhead 15000.0 879496.8 586.3&lt;/h1&gt;

&lt;p&gt;System Benchmarks Index Score 564.2&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;http://www.ctohome.com/FuWuQi/c5/172.html&lt;/p&gt;

&lt;p&gt;root@syncapi:/tmp#&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;</content>
 </entry>
 
 <entry>
   <title>支持IT降级论</title>
   <link href="http://gotomato.tk/2013/02/%e6%94%af%e6%8c%81it%e9%99%8d%e7%ba%a7%e8%ae%ba/"/>
   <updated>2013-02-02T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2013/02/%e6%94%af%e6%8c%81it%e9%99%8d%e7%ba%a7%e8%ae%ba</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;之前看过一篇&lt;a href='http://meditic.com/degrading-for-success/'&gt;降级论&lt;/a&gt;的博文，当时就非常赞同里面的观点。最近考察了一些传统行业以后，更加深深地明白“科技以人为本”说的不是废话。&lt;/p&gt;

&lt;p&gt;抛开物联网的概念，在传统的行业里面，就可以发现很多还未触及网络以及电脑时代早就发展成熟了的技术。可能是隔行如隔山，也可能是互联网科技、电脑科技从业者不愿意“降级”去思考传统行业的问题，导致了这个问题吧。&lt;/p&gt;

&lt;p&gt;如果能够及时地降级，我觉得至少有如下的一些好处：&lt;/p&gt;

&lt;p&gt;1. 避开强烈的竞争。如果降级的时机早的话，市场也较为空白。&lt;/p&gt;

&lt;p&gt;2. 产品定位可以更加高端，而相应的价格方面也会有更大的空间。&lt;/p&gt;

&lt;p&gt;3. 作为专业人士可能能够获得更加好的待遇。&lt;/p&gt;

&lt;p&gt;4. 拓展视野。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>WWDC视频/代码&#8211;很好的资料库</title>
   <link href="http://gotomato.tk/2013/02/wwdc%e8%a7%86%e9%a2%91%e4%bb%a3%e7%a0%81-%e5%be%88%e5%a5%bd%e7%9a%84%e8%b5%84%e6%96%99%e5%ba%93/
/"/>
   <updated>2013-02-01T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2013/02/wwdc%e8%a7%86%e9%a2%91%e4%bb%a3%e7%a0%81-%e5%be%88%e5%a5%bd%e7%9a%84%e8%b5%84%e6%96%99%e5%ba%93/wwdc%e8%a7%86%e9%a2%91%e4%bb%a3%e7%a0%81-%e5%be%88%e5%a5%bd%e7%9a%84%e8%b5%84%e6%96%99%e5%ba%93</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;刚发现WWDC视频和代码是有存档的，可以用iTunes来查看，应该都是免费的。&lt;/p&gt;

&lt;p&gt;有时间计划都看看。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>ios跨平台开发-POSIX信号量的支持</title>
   <link href="http://gotomato.tk/2013/01/ios%e8%b7%a8%e5%b9%b3%e5%8f%b0%e5%bc%80%e5%8f%91-posix%e4%bf%a1%e5%8f%b7%e9%87%8f%e7%9a%84%e6%94%af%e6%8c%81/
/"/>
   <updated>2013-01-30T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2013/01/ios%e8%b7%a8%e5%b9%b3%e5%8f%b0%e5%bc%80%e5%8f%91-posix%e4%bf%a1%e5%8f%b7%e9%87%8f%e7%9a%84%e6%94%af%e6%8c%81/ios%e8%b7%a8%e5%b9%b3%e5%8f%b0%e5%bc%80%e5%8f%91-posix%e4%bf%a1%e5%8f%b7%e9%87%8f%e7%9a%84%e6%94%af%e6%8c%81</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;为了跨平台，首选了POSIX的pthread，但发现在ios平台下面有如下问题，以后解决了再发上来：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;sem_init函数返回ENOSYS 78错误码，表示未实现。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;换用sem_open创建有名管道，本来应该返回sem_t&lt;em&gt;，但目测指针不是返回-1(表示SEM_FAIL)就是0×4，不是一个合法的指针。errno有时候为2有时候为3。强行使用的症状印象中是sem_wait恒成功。&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;iOS平台下面信号量等同步机制在&lt;a href='http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/Multithreading/Introduction/Introduction.html#//apple_ref/doc/uid/10000057i-CH1-SW1'&gt;Threading Programming Guide&lt;/a&gt;、Concurrency Programming Guide等知识库文章里面有描述，如果不需要跨平台可以直接使用。否则需要自己封装。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>cocos2d-x开发模式-更新画面或者游戏世界</title>
   <link href="http://gotomato.tk/2013/01/cocos2d-x%e5%bc%80%e5%8f%91%e6%a8%a1%e5%bc%8f-%e6%9b%b4%e6%96%b0%e7%94%bb%e9%9d%a2%e6%88%96%e8%80%85%e6%b8%b8%e6%88%8f%e4%b8%96%e7%95%8c/
/"/>
   <updated>2013-01-30T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2013/01/cocos2d-x%e5%bc%80%e5%8f%91%e6%a8%a1%e5%bc%8f-%e6%9b%b4%e6%96%b0%e7%94%bb%e9%9d%a2%e6%88%96%e8%80%85%e6%b8%b8%e6%88%8f%e4%b8%96%e7%95%8c/cocos2d-x%e5%bc%80%e5%8f%91%e6%a8%a1%e5%bc%8f-%e6%9b%b4%e6%96%b0%e7%94%bb%e9%9d%a2%e6%88%96%e8%80%85%e6%b8%b8%e6%88%8f%e4%b8%96%e7%95%8c</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;在CCObject里面有一个函数是：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;virtual void update(float dt) {CC_UNUSED_PARAM(dt);};&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在cocos2d-x里面可以做到对每个CCObject周期性地调用这个函数，方法是调用CCNode的scheduleUpdate函数：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;    /** schedules the &amp;#8220;update&amp;#8221; method. It will use the order number 0. This method will be called every frame.&lt;/p&gt;

&lt;p&gt;     Scheduled methods with a lower order value will be called before the ones that have a higher order value.&lt;/p&gt;

&lt;p&gt;     Only one &amp;#8220;update&amp;#8221; method could be scheduled per node.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;     @since v0.99.3&lt;/p&gt;

&lt;p&gt;     &lt;em&gt;/&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;    void scheduleUpdate(void);&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;因为update函数的调用是在主线程，而且频度很高，所以适合在这里进行后台网络数据的检查或者游戏世界的更新，然后绘制出来。由于这两个函数在 CCNode就已经被定义，所以诸如 CCLayer、CCSprite等具体类里面都可以直接使用这种方法。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>在越狱后的iPad中找别的程序目录</title>
   <link href="http://gotomato.tk/2013/01/%e5%9c%a8%e8%b6%8a%e7%8b%b1%e5%90%8e%e7%9a%84ipad%e4%b8%ad%e6%89%be%e5%88%ab%e7%9a%84%e7%a8%8b%e5%ba%8f%e7%9b%ae%e5%bd%95/
/"/>
   <updated>2013-01-25T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2013/01/%e5%9c%a8%e8%b6%8a%e7%8b%b1%e5%90%8e%e7%9a%84ipad%e4%b8%ad%e6%89%be%e5%88%ab%e7%9a%84%e7%a8%8b%e5%ba%8f%e7%9b%ae%e5%bd%95/%e5%9c%a8%e8%b6%8a%e7%8b%b1%e5%90%8e%e7%9a%84ipad%e4%b8%ad%e6%89%be%e5%88%ab%e7%9a%84%e7%a8%8b%e5%ba%8f%e7%9b%ae%e5%bd%95</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;由于反向工程等需要，可能需要查看别的iOS程序所在目录，那就需要把设备越狱掉了。&lt;/p&gt;

&lt;p&gt;越狱以后，可以用iFile来浏览所有目录，也可以用更加方便的ssh，只需要在设置里面开启ssh即可，然后上去查找/var/mobile/Applications目录即可。例如我找海豚浏览器的目录：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;connectu:~ root# find /var/mobile/Applications/ -name &amp;#8221;&lt;em&gt;olphin&amp;#8221;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;/var/mobile/Applications/B4C61F9B-1C2D-4C9A-B471-D784E5A48E81/Dolphin.app/Dolphin&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>创建使用cocos2d-x的Android工程</title>
   <link href="http://gotomato.tk/2013/01/%e5%88%9b%e5%bb%ba%e4%bd%bf%e7%94%a8cocos2d-x%e7%9a%84android%e5%b7%a5%e7%a8%8b/
/"/>
   <updated>2013-01-25T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2013/01/%e5%88%9b%e5%bb%ba%e4%bd%bf%e7%94%a8cocos2d-x%e7%9a%84android%e5%b7%a5%e7%a8%8b/%e5%88%9b%e5%bb%ba%e4%bd%bf%e7%94%a8cocos2d-x%e7%9a%84android%e5%b7%a5%e7%a8%8b</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;本文基于cocos2d-x 2.0稳定版，主机操作系统为Mac OSX。对于linux和windows应该是类似的（win下的脚本为bat）。&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;cocos2d是一个为ios编写的游戏开发库，流行起来以后创建了跨平台的cocos2d-x库，也可以支持android(主要基于c 开发)。&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;创建Android工程的方式为通过cocos2d-x目录下面的create-android-project.sh来创建。因为依赖Android的NDK以及SDK，所以需要先把它们都安装好，并且设置好NDK_ROOT以及ANDROID_SDK_ROOT这两个环境变量指向它们所在目录。如果不想添加这两个变量，也可以在脚本里面修改以下两行：&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;h1 id='set_environment_paramters'&gt;set environment paramters&lt;/h1&gt;

&lt;p&gt;NDK_ROOT_LOCAL=&amp;#8221;/home/laschweinski/android/android-ndk-r5&amp;#8221;&lt;/p&gt;

&lt;p&gt;ANDROID_SDK_ROOT_LOCAL=&amp;#8221;/home/laschweinski/android/android-sdk-linux_86&amp;#8221;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;我把环境变量添加到~/.bash_profile里面。然后运行./create-android-project.sh。整个交互过程需要输入包名、API id、项目名等，参考：&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;agspc98:cocos2d-2.0-x-2.0.4 laoyongchao$ ./create-android-project.sh &lt;/p&gt;

&lt;p&gt;use global definition of NDK_ROOT: /Users/laoyongchao/Applications/android-ndk-r6-crystax-2&lt;/p&gt;

&lt;p&gt;use global definition of ANDROID_SDK_ROOT: /Users/laoyongchao/Applications/adt-bundle-mac/sdk&lt;/p&gt;

&lt;p&gt;Input package path. For example: org.cocos2dx.example&lt;/p&gt;

&lt;p&gt;fluke.play.testcocos2dx&lt;/p&gt;

&lt;p&gt;Now cocos2d-x supports Android 2.2 or upper version&lt;/p&gt;

&lt;p&gt;Available Android targets:&lt;/p&gt;

&lt;p&gt;———-&lt;/p&gt;

&lt;p&gt;id: 1 or &amp;#8220;android-8&amp;#8221;&lt;/p&gt;

&lt;p&gt;     Name: Android 2.2&lt;/p&gt;

&lt;p&gt;     Type: Platform&lt;/p&gt;

&lt;p&gt;     API level: 8&lt;/p&gt;

&lt;p&gt;     Revision: 3&lt;/p&gt;

&lt;p&gt;     Skins: HVGA, QVGA, WQVGA400, WQVGA432, WVGA800 (default), WVGA854&lt;/p&gt;

&lt;p&gt;     ABIs : armeabi&lt;/p&gt;

&lt;p&gt;———-&lt;/p&gt;

&lt;p&gt;id: 2 or &amp;#8220;android-17&amp;#8221;&lt;/p&gt;

&lt;p&gt;     Name: Android 4.2&lt;/p&gt;

&lt;p&gt;     Type: Platform&lt;/p&gt;

&lt;p&gt;     API level: 17&lt;/p&gt;

&lt;p&gt;     Revision: 1&lt;/p&gt;

&lt;p&gt;     Skins: HVGA, QVGA, WQVGA400, WQVGA432, WSVGA, WVGA800 (default), WVGA854, WXGA720, WXGA800, WXGA800-7in&lt;/p&gt;

&lt;p&gt;     ABIs : armeabi-v7a&lt;/p&gt;

&lt;p&gt;input target id:&lt;/p&gt;

&lt;p&gt;1&lt;/p&gt;

&lt;p&gt;input your project name:&lt;/p&gt;

&lt;p&gt;TestCocos2dx&lt;/p&gt;

&lt;p&gt;Created project directory: /Users/laoyongchao/Documents/projects/os/cocos2d-2.0-x-2.0.4/TestCocos2dx/proj.android&lt;/p&gt;

&lt;p&gt;Created directory /Users/laoyongchao/Documents/projects/os/cocos2d-2.0-x-2.0.4/TestCocos2dx/proj.android/src/fluke/play/testcocos2dx&lt;/p&gt;

&lt;p&gt;Added file /Users/laoyongchao/Documents/projects/os/cocos2d-2.0-x-2.0.4/TestCocos2dx/proj.android/src/fluke/play/testcocos2dx/TestCocos2dx.java&lt;/p&gt;

&lt;p&gt;Created directory /Users/laoyongchao/Documents/projects/os/cocos2d-2.0-x-2.0.4/TestCocos2dx/proj.android/res&lt;/p&gt;

&lt;p&gt;Created directory /Users/laoyongchao/Documents/projects/os/cocos2d-2.0-x-2.0.4/TestCocos2dx/proj.android/bin&lt;/p&gt;

&lt;p&gt;Created directory /Users/laoyongchao/Documents/projects/os/cocos2d-2.0-x-2.0.4/TestCocos2dx/proj.android/libs&lt;/p&gt;

&lt;p&gt;Created directory /Users/laoyongchao/Documents/projects/os/cocos2d-2.0-x-2.0.4/TestCocos2dx/proj.android/res/values&lt;/p&gt;

&lt;p&gt;Added file /Users/laoyongchao/Documents/projects/os/cocos2d-2.0-x-2.0.4/TestCocos2dx/proj.android/res/values/strings.xml&lt;/p&gt;

&lt;p&gt;Created directory /Users/laoyongchao/Documents/projects/os/cocos2d-2.0-x-2.0.4/TestCocos2dx/proj.android/res/layout&lt;/p&gt;

&lt;p&gt;Added file /Users/laoyongchao/Documents/projects/os/cocos2d-2.0-x-2.0.4/TestCocos2dx/proj.android/res/layout/main.xml&lt;/p&gt;

&lt;p&gt;Added file /Users/laoyongchao/Documents/projects/os/cocos2d-2.0-x-2.0.4/TestCocos2dx/proj.android/AndroidManifest.xml&lt;/p&gt;

&lt;p&gt;Added file /Users/laoyongchao/Documents/projects/os/cocos2d-2.0-x-2.0.4/TestCocos2dx/proj.android/build.xml&lt;/p&gt;

&lt;p&gt;Added file /Users/laoyongchao/Documents/projects/os/cocos2d-2.0-x-2.0.4/TestCocos2dx/proj.android/proguard-project.txt&lt;/p&gt;

&lt;p&gt;Resolved location of library project to: /Users/laoyongchao/Documents/projects/os/cocos2d-2.0-x-2.0.4/cocos2dx/platform/android/java&lt;/p&gt;

&lt;p&gt;Updated project.properties&lt;/p&gt;

&lt;p&gt;Updated local.properties&lt;/p&gt;

&lt;p&gt;Updated file /Users/laoyongchao/Documents/projects/os/cocos2d-2.0-x-2.0.4/TestCocos2dx/proj.android/proguard-project.txt&lt;/p&gt;

&lt;p&gt;agspc98:cocos2d-2.0-x-2.0.4 laoyongchao$ &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;然后是编译的过程，到TestCocos2dx目录去，发现工程文件都被整理在proj.android目录里面了（每个平台都统一这样的目录结构，比如ios的在proj.ios），到proj.android目录下运行./build_native.sh，结果发现很多错误，怀疑是对ndk的版本有要求，就换成ndk-r8c，结果成功：&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;….&lt;/p&gt;

&lt;p&gt;Prebuilt       : curl.a&lt;br /&gt;StaticLibrary  : libextension.a&lt;/p&gt;

&lt;p&gt;SharedLibrary  : libgame.so&lt;/p&gt;

&lt;p&gt;Install        : libgame.so =&amp;gt; libs/armeabi/libgame.so&lt;/p&gt;

&lt;p&gt;make: Leaving directory &lt;code&gt;/Users/laoyongchao/Documents/projects/os/cocos2d-2.0-x-2.0.4/TestCocos2dx/proj.android&amp;#39;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;agspc98:proj.android laoyongchao$ &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;然后编译apk，如果是第一次运行，还需要更新以下环境：&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;agspc98:proj.android laoyongchao$ android update project –path .&lt;/p&gt;

&lt;p&gt;Updated local.properties&lt;/p&gt;

&lt;p&gt;Updated file ./proguard-project.txt&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;另外也可以通过ANDROID_HOME变量指向sdk路径的方式来使得编译时候能找到SDK。&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;我很悲催，上面两种方式都不可行，暂时不想花时间去检查ant的问题，就用第三种方式，直接在ant命令行用-D来插入定义：&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ant debug -Dsdk.dir=/Users/laoyongchao/Applications/adt-bundle-mac/sdk&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;然后安装：&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;agspc98:proj.android laoyongchao$ adb install bin/TestCocos2dx-debug.apk &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;daemon not running. starting it now on port 5037 *&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;daemon started successfully *&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3458 KB/s (1624090 bytes in 0.458s)&lt;/p&gt;

&lt;p&gt;pkg: /data/local/tmp/TestCocos2dx-debug.apk&lt;/p&gt;

&lt;p&gt;Success&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>遇到Mountain Lion的两个bug</title>
   <link href="http://gotomato.tk/2013/01/%e9%81%87%e5%88%b0mountain-lion%e7%9a%84%e4%b8%a4%e4%b8%aabug/"/>
   <updated>2013-01-03T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2013/01/%e9%81%87%e5%88%b0mountain-lion%e7%9a%84%e4%b8%a4%e4%b8%aabug</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;才开始转用mac不久，就遇上了两个Mountain Lion的bug，其中第一个应该是系统级别的bug，希望近期能够修复。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;应用程序中的“show in Finder”或者“在Finder中显示”功能失效。这个很诡异，我一开始还以为是金山快盘修改了Finder里面的icon功能导致的，后来到stackoverflow看了一下，发现是消息队列的bug，看来还有潜在的别的问题，譬如拖拽等。解决办法是kill掉appleeventsd（不需要重启了？不清楚）：&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;sudo killall -KILL appleeventsd&lt;/p&gt;

&lt;p&gt;2. 系统自带的备忘录丢失。&lt;/p&gt;

&lt;p&gt;机器从来没关过，从来都是休眠，昨天打开盖子的时候曾发现登陆背景花瓶，进入以后没感觉什么异样，今天早上开机打开备忘录发现少了一条，过了大约1分钟，突然显示出那条记录的早期状态（估计是从icloud同步下来的）。难道是临界状态ssd写入的问题？&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>新年快乐!</title>
   <link href="http://gotomato.tk/2013/01/%e6%96%b0%e5%b9%b4%e5%bf%ab%e4%b9%90/"/>
   <updated>2013-01-01T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2013/01/%e6%96%b0%e5%b9%b4%e5%bf%ab%e4%b9%90</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;2013来了，昨晚还到广州塔去倒数了，心里面有很多愿望，为了实现这些愿望，希望自己可以做到：&lt;/p&gt;

&lt;p&gt;注意睡眠，早睡早起。&lt;/p&gt;

&lt;p&gt;有执行力。&lt;/p&gt;

&lt;p&gt;保持学习。&lt;/p&gt;

&lt;p&gt;关心家人。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>iOS开发技巧：无法选择设备调试的解决办法</title>
   <link href="http://gotomato.tk/2012/12/ios%e5%bc%80%e5%8f%91%e6%8a%80%e5%b7%a7%ef%bc%9a%e6%97%a0%e6%b3%95%e9%80%89%e6%8b%a9%e8%ae%be%e5%a4%87%e8%b0%83%e8%af%95%e7%9a%84%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95/
/"/>
   <updated>2012-12-20T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2012/12/ios%e5%bc%80%e5%8f%91%e6%8a%80%e5%b7%a7%ef%bc%9a%e6%97%a0%e6%b3%95%e9%80%89%e6%8b%a9%e8%ae%be%e5%a4%87%e8%b0%83%e8%af%95%e7%9a%84%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95/ios%e5%bc%80%e5%8f%91%e6%8a%80%e5%b7%a7%ef%bc%9a%e6%97%a0%e6%b3%95%e9%80%89%e6%8b%a9%e8%ae%be%e5%a4%87%e8%b0%83%e8%af%95%e7%9a%84%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;这里讲的不是破解Xcode调试程序的方法（方法在），而是说在配置好了调试环境以后，新建的功能里面没有设备名可以选，只在scheme的位置看到模拟器名和一个&amp;#8221;iOS Device&amp;#8221;的选项。遇到这种情况怎么解决呢？&lt;/p&gt;

&lt;p&gt;这种情况是xcode里面设置的&amp;#8221;Deployment Target&amp;#8221;比设备的系统版本高导致的，譬如选择了6.0，而设备只有5.1。要解决就只需要在项目的Info标签里面的Deployment Target的下拉框里面选择正确的版本就好了，马上生效。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>计划尝试使用Piwik来统计网站</title>
   <link href="http://gotomato.tk/2012/12/%e8%ae%a1%e5%88%92%e5%b0%9d%e8%af%95%e4%bd%bf%e7%94%a8piwik%e6%9d%a5%e7%bb%9f%e8%ae%a1%e7%bd%91%e7%ab%99/
/"/>
   <updated>2012-12-20T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2012/12/%e8%ae%a1%e5%88%92%e5%b0%9d%e8%af%95%e4%bd%bf%e7%94%a8piwik%e6%9d%a5%e7%bb%9f%e8%ae%a1%e7%bd%91%e7%ab%99/%e8%ae%a1%e5%88%92%e5%b0%9d%e8%af%95%e4%bd%bf%e7%94%a8piwik%e6%9d%a5%e7%bb%9f%e8%ae%a1%e7%bd%91%e7%ab%99</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;备忘一下，自己原来的网站都是使用&lt;a href='http://www.google.com/analytics'&gt;Google Analytics&lt;/a&gt;来进行统计的，今天无意间发现有一个开源的选择–Piwik(&lt;a href='http://demo.piwik.org/index.php?module=CoreHome&amp;amp;action=index&amp;amp;idSite=7&amp;amp;period=day&amp;amp;date=yesterday#module=Dashboard&amp;amp;action=embeddedIndex&amp;amp;idSite=7&amp;amp;period=day&amp;amp;date=yesterday&amp;amp;idDashboard=1'&gt;demo&lt;/a&gt;)。从demo上面看还是蛮帅的，看起来数据也很全面，等有空对比下再说。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>给gitlab加上Google Analytics的统计跟踪代码</title>
   <link href="http://gotomato.tk/2012/12/%e7%bb%99gitlab%e5%8a%a0%e4%b8%8agoogle-analytics%e7%9a%84%e7%bb%9f%e8%ae%a1%e8%b7%9f%e8%b8%aa%e4%bb%a3%e7%a0%81/
/"/>
   <updated>2012-12-20T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2012/12/%e7%bb%99gitlab%e5%8a%a0%e4%b8%8agoogle-analytics%e7%9a%84%e7%bb%9f%e8%ae%a1%e8%b7%9f%e8%b8%aa%e4%bb%a3%e7%a0%81/%e7%bb%99gitlab%e5%8a%a0%e4%b8%8agoogle-analytics%e7%9a%84%e7%bb%9f%e8%ae%a1%e8%b7%9f%e8%b8%aa%e4%bb%a3%e7%a0%81</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;Google Analytics提供了javascript代码来进行跟踪统计，要插入gitlab中，需要编辑它的layout文件，这种文件用的是haml格式（ruby的一种html模板语言）。&lt;/p&gt;

&lt;p&gt;要往haml里面添加javascript内容，需要用到&lt;strong&gt;:javascript&lt;/strong&gt;过滤器。如果google提供的代码如下：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt; &lt;/p&gt;

&lt;p&gt;  var _gaq = _gaq || &lt;span /&gt;;&lt;/p&gt;

&lt;p&gt;  _gaq.push(&lt;span&gt;&amp;#8217;_setAccount&amp;#8217;, &amp;#8216;XXXX&amp;#8217;&lt;/span&gt;);&lt;/p&gt;

&lt;p&gt;  _gaq.push(&lt;span&gt;&amp;#8217;_trackPageview&amp;#8217;&lt;/span&gt;);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;  (function() {&lt;/p&gt;

&lt;p&gt;    var ga = document.createElement(&amp;#8216;script&amp;#8217;); ga.type = &amp;#8216;text/javascript&amp;#8217;; ga.async = true;&lt;/p&gt;

&lt;p&gt;    ga.src = (&amp;#8216;https:&amp;#8217; == document.location.protocol ? &amp;#8216;https://ssl&amp;#8217; : &amp;#8216;http://www&amp;#8217;) &amp;#8216;.google-analytics.com/ga.js&amp;#8217;;&lt;/p&gt;

&lt;p&gt;    var s = document.getElementsByTagName(&amp;#8216;script&amp;#8217;)&lt;span&gt;0&lt;/span&gt;; s.parentNode.insertBefore(ga, s);&lt;/p&gt;

&lt;p&gt;  })();&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;则需要往gitlab/app/views/layout/_head.html.haml文件最后添加的代码是：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;  var _gaq = _gaq || &lt;span /&gt;;&lt;/p&gt;

&lt;p&gt;  _gaq.push(&lt;span&gt;&amp;#8217;_setAccount&amp;#8217;, &amp;#8216;XXXX&amp;#8217;&lt;/span&gt;);&lt;/p&gt;

&lt;p&gt;  _gaq.push(&lt;span&gt;&amp;#8217;_trackPageview&amp;#8217;&lt;/span&gt;);&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;  (function() {&lt;/p&gt;

&lt;p&gt;    var ga = document.createElement(&amp;#8216;script&amp;#8217;); ga.type = &amp;#8216;text/javascript&amp;#8217;; ga.async = true;&lt;/p&gt;

&lt;p&gt;    ga.src = (&amp;#8216;https:&amp;#8217; == document.location.protocol ? &amp;#8216;https://ssl&amp;#8217; : &amp;#8216;http://www&amp;#8217;) &amp;#8216;.google-analytics.com/ga.js&amp;#8217;;&lt;/p&gt;

&lt;p&gt;    var s = document.getElementsByTagName(&amp;#8216;script&amp;#8217;)&lt;span&gt;0&lt;/span&gt;; s.parentNode.insertBefore(ga, s);&lt;/p&gt;

&lt;p&gt;  })();&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;
&lt;/blockquote&gt;</content>
 </entry>
 
 <entry>
   <title>续Mac OSX Mountain Lion下尝试蓝牙SPP server</title>
   <link href="http://gotomato.tk/2012/12/httplukecafe-com201212mac-osx-mountain-lion%e4%b8%8b%e5%b0%9d%e8%af%95%e8%93%9d%e7%89%99spp-server/
/"/>
   <updated>2012-12-19T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2012/12/httplukecafe-com201212mac-osx-mountain-lion%e4%b8%8b%e5%b0%9d%e8%af%95%e8%93%9d%e7%89%99spp-server/httplukecafe-com201212mac-osx-mountain-lion%e4%b8%8b%e5%b0%9d%e8%af%95%e8%93%9d%e7%89%99spp-server</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;之前写了《&lt;a href='http://lukecafe.com/2012/12/mac-osx-mountain-lion下尝试蓝牙spp-server/'&gt;Mac OSX Mountain Lion下尝试蓝牙SPP server&lt;/a&gt;》，说明在 Mountain Lion下面由于蓝牙API的变化已经不容易编写串口程序，但是突然想起一个很简单的方法，原来一定是大脑短路了没想到。&lt;/p&gt;

&lt;p&gt;蓝牙SPP服务无非就是一种串口通信，而在*INX下面，会把串口写成/dev/tty*设备，并且是字符串设备，可以直接与这个设备进行读写的通信。&lt;/p&gt;

&lt;p&gt;基于这个事实，想要做到测试最简单的方式就是编写脚本，用python的serial模块很方便就能够做到了。&lt;/p&gt;

&lt;p&gt;示例：&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1 id='usrbinenv_python'&gt;!/usr/bin/env python&lt;/h1&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;import serial&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;def main():&lt;/p&gt;

&lt;p&gt;print &amp;#8216;===== Test Serial Communication =====&amp;#8217;&lt;/p&gt;

&lt;p&gt;ser = serial.Serial(&amp;#8216;/dev/tty.Bluetooth-PDA-Sync&amp;#8217;, 9600, timeout=10)&lt;/p&gt;

&lt;p&gt;recvbuf = &amp;#8221;&lt;/p&gt;

&lt;p&gt;while True:&lt;/p&gt;

&lt;p&gt;char = ser.read(1)&lt;/p&gt;

&lt;p&gt;if not len(char): continue&lt;/p&gt;

&lt;p&gt;recvbuf = char&lt;/p&gt;

&lt;h1 id='todo_parse_proto'&gt;TODO: parse proto&lt;/h1&gt;

&lt;p&gt;ser.write(char)&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;ser.close()&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;if __name__ == &amp;#8216;__main__&amp;#8217;:&lt;/p&gt;

&lt;p&gt;main()&lt;/p&gt;
&lt;/blockquote&gt;</content>
 </entry>
 
 <entry>
   <title>Mac OSX Mountain Lion下尝试蓝牙SPP server</title>
   <link href="http://gotomato.tk/2012/12/mac-osx-mountain-lion%e4%b8%8b%e5%b0%9d%e8%af%95%e8%93%9d%e7%89%99spp-server/
/"/>
   <updated>2012-12-16T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2012/12/mac-osx-mountain-lion%e4%b8%8b%e5%b0%9d%e8%af%95%e8%93%9d%e7%89%99spp-server/mac-osx-mountain-lion%e4%b8%8b%e5%b0%9d%e8%af%95%e8%93%9d%e7%89%99spp-server</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;因为想搭建一个调试环境，在mountain lion上面通过蓝牙做一个SPP串口服务，用于和android手机的程序（譬如BluetoothChat）进行程序调试，所以就进行了一番尝试，结果是暂时失败的，记录一下。&lt;/p&gt;

&lt;p&gt;一、Java的方案&lt;/p&gt;

&lt;p&gt;根据文章《&lt;a href='http://www.jsr82.com/jsr-82-sample-spp-server-and-client/'&gt;JSR-82 : Java Bluetooth&lt;/a&gt;》提示，可以通过java来使用系统蓝牙服务，能够达到跨平台的效果（当然不同平台有不同的实现或者适配），并且找到了mac下面的一个开源实现–&lt;a href='http://bluecove.org/'&gt;BlueCove&lt;/a&gt;。测试的代码在《JSR-82: Java Bluetooth》以及《&lt;a href='http://homepages.ius.edu/RWISMAN/C490/html/JavaandBluetooth.htm'&gt;Java and Bluetooth&lt;/a&gt;》这篇文章都有，编译的时候注意包含jar路径即可。由于是32位的库，所以运行的时候需要加上-d32参数。编译和运行的命令行如下：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;javac -classpath bluecove-2.1.0-10dot6.jar SampleSPPServer.java&lt;/p&gt;

&lt;p&gt;java -d32 -classpath &amp;#8220;.:bluecove-2.1.0-10dot6.jar&amp;#8221; SampleSPPServer&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;可惜还是有错：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;dyld: lazy symbol binding failed: Symbol not found: &lt;em&gt;IOBluetoothLocalDeviceReadSupportedFeatures&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;  Referenced from: /private/var/folders/rv/scdm9d6x6vn_56s7ftzxj_wm0000gn/T/bluecove_laoyongchao_0/libbluecove.jnilib&lt;/p&gt;

&lt;p&gt;  Expected in: /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;dyld: Symbol not found: &lt;em&gt;IOBluetoothLocalDeviceReadSupportedFeatures&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;  Referenced from: /private/var/folders/rv/scdm9d6x6vn_56s7ftzxj_wm0000gn/T/bluecove_laoyongchao_0/libbluecove.jnilib&lt;/p&gt;

&lt;p&gt;  Expected in: /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Trace/BPT trap: 5&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;看起来有符号已经变化了，下载了BlueCove来编译，发现原工程用的是OS X 10.6的SDK，而Mountain Lion已经是10.8了，有部分蓝牙相关的函数已经找不到符号，在苹果的页面已经找到了&lt;a href='https://developer.apple.com/library/mac/#releasenotes/General/APIDiffsMacOSX10_8/IOBluetooth.html'&gt;删除掉接口的说明&lt;/a&gt;……&lt;/p&gt;

&lt;p&gt;没办法，这需要深入到蓝牙的API，所以暂时不研究。&lt;/p&gt;

&lt;p&gt;二、 python的方案&lt;/p&gt;

&lt;p&gt;找到一个python的方案叫&lt;a href='http://lightblue.sourceforge.net/'&gt;lightblue&lt;/a&gt;，也是一个跨平台的封装，其中还包含了一个naive库叫做LightAquaBlue，只可惜这个方案也不支持mountain lion。&lt;/p&gt;

&lt;p&gt;所以目前打算两个方案：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;用虚拟机（破解vmware fusion）&lt;/li&gt;

&lt;li&gt;自己编译BlueCove（要修改）&lt;/li&gt;
&lt;/ol&gt;</content>
 </entry>
 
 <entry>
   <title>ubuntu搭建网页用户ftp的方案</title>
   <link href="http://gotomato.tk/2012/12/ubuntu%e6%90%ad%e5%bb%ba%e7%bd%91%e9%a1%b5%e7%94%a8%e6%88%b7ftp%e7%9a%84%e6%96%b9%e6%a1%88/
/"/>
   <updated>2012-12-13T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2012/12/ubuntu%e6%90%ad%e5%bb%ba%e7%bd%91%e9%a1%b5%e7%94%a8%e6%88%b7ftp%e7%9a%84%e6%96%b9%e6%a1%88/ubuntu%e6%90%ad%e5%bb%ba%e7%bd%91%e9%a1%b5%e7%94%a8%e6%88%b7ftp%e7%9a%84%e6%96%b9%e6%a1%88</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;最近需要新建一个网站，并且让用户上传网页文件。不想浪费时间在配置上面，就需要一个简单的方案。我采用了proftpd nginx php的方案。&lt;/p&gt;

&lt;p&gt;nginx php部分就不说了，默认的安装，设置好虚拟站点。&lt;/p&gt;

&lt;p&gt;而ftp部分，为了安全，把用户chroot在自己的目录，然后链接这个目录到虚拟站点目录即可。&lt;/p&gt;

&lt;p&gt;默认安装proftpd: aptitude install proftpd&lt;/p&gt;

&lt;p&gt;然后修改配置，去掉下面行的注视#：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;DefaultRoot ~&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;链接： ln -s /home/myuser/public_html /var/www/mysite&lt;/p&gt;

&lt;p&gt;其中public_html目录需要自己建立。&lt;/p&gt;

&lt;p&gt;重启proftpd即可。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>最新防墙策略</title>
   <link href="http://gotomato.tk/2012/12/%e6%9c%80%e6%96%b0%e9%98%b2%e5%a2%99%e7%ad%96%e7%95%a5/"/>
   <updated>2012-12-08T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2012/12/%e6%9c%80%e6%96%b0%e9%98%b2%e5%a2%99%e7%ad%96%e7%95%a5</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;最近开始发现&lt;a href='http://openvpn.net/'&gt;openvpn&lt;/a&gt;不稳定，主要有几个现象：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;udp在mac下无法连接上，用的是&lt;a href='http://www.sparklabs.com/viscosity'&gt;viscocity&lt;/a&gt;，所以mac只好用tcp。&lt;/li&gt;
&lt;/ol&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;即使是tcp，用几天也要换一次端口。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;今天发现winxp下面（openvpn client）无法连接udp了，只能tcp。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;4. 朋友在深圳无法连接。&lt;/p&gt;

&lt;p&gt;既然不同的机子，不同的软件，不同的协议实现的支持参差不齐，而且是随着时间动态变化，所以看来应该是伟大防火墙GFW有自适应的功能，感觉比过去强大多了。&lt;/p&gt;

&lt;p&gt;只要是自适应的方式，我觉得主要的应对方法就是自行加密协议了，现在我在mac下主要用clowwindy/&lt;a href='https://github.com/clowwindy/shadowsocks'&gt;shadowsocks&lt;/a&gt;–通过GoAgentX这个前端来使用，目前感觉还非常不错。类似的还有reusee/&lt;a href='https://github.com/reusee/gotunnel'&gt;gotunnel&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;从长远来看，如果shadowsocks们可以添加一个插件的方式，让我们方便的编写自己的私有加密协议就更加完美了。&lt;/p&gt;

&lt;p&gt;搜索到了 slashdot的一篇文章–&lt;a href='http://www.solidot.org/story?sid=32532'&gt;从方校长论文看防火墙技术发展&lt;/a&gt;，看来方校长是有在不断的升级啊，论文的产量更加让人钦佩。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;北邮校长被誉为防火长城之父，虽然他自称已退出日常管理，但对防火墙的技术发展无疑具有重要影响。从Google学术搜索&lt;a href='http://scholar.google.com/scholar?as_ylo=2012&amp;amp;q=方滨兴&amp;amp;hl=en&amp;amp;as_sdt=0,5'&gt;发现&lt;/a&gt;，方校长在即将过去的一年中笔耕不辍，是十多篇论文的署名作者，其中一些论文值得关注，例如《&lt;a href='http://www.cqvip.com/qk/96857x/201209/43116847.html'&gt;正则表达式分组的1／（1-1／k）-近似算法&lt;/a&gt;》，《&lt;a href='http://159.226.100.150:8085/lis/CN/article/downloadArticleFile.do?attachType=PDF&amp;amp;id=12122'&gt;基于贝叶斯网络建模的非常规危机事件网络舆情预警研究&lt;/a&gt;(PDF)》，《&lt;a href='http://www.cqvip.com/qk/95624x/201205/41881868.html'&gt;基于密度估计的社会网络特征簇挖掘方法&lt;/a&gt;》，《&lt;a href='http://www.cqvip.com/qk/83640x/201203/42615970.html'&gt;新媒体事件新闻话题数预测建模&lt;/a&gt;》，《&lt;a href='http://jcjs.siat.ac.cn/ch/reader/create_pdf.aspx?file_no=201205006&amp;amp;flag=1&amp;amp;journal_id=jcjs&amp;amp;year_id=2012'&gt;网络流量分类研究进展与展望&lt;/a&gt;(PDF)》。最后的一篇论文介绍了多种正处于实验阶段的流量分类方法，包括基于主机行为的流量分类（适用于骨干网）和基于机器学习的流量分类——其中有准确度达到95%的向量机（support vector machine，SVM）和神经网络分析，机器学习能够对加密流量进行分析。论文还提到了Skype的加密流量变化和Tor的混淆流量，表示高速网络环境中的流量实时分类很有挑战性。&lt;/p&gt;
&lt;/blockquote&gt;</content>
 </entry>
 
 <entry>
   <title>更新chromium源码的注意事项</title>
   <link href="http://gotomato.tk/2012/12/%e6%9b%b4%e6%96%b0chromium%e6%ba%90%e7%a0%81%e7%9a%84%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a1%b9/
/"/>
   <updated>2012-12-07T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2012/12/%e6%9b%b4%e6%96%b0chromium%e6%ba%90%e7%a0%81%e7%9a%84%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a1%b9/%e6%9b%b4%e6%96%b0chromium%e6%ba%90%e7%a0%81%e7%9a%84%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a1%b9</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;最近又更新chromium源码，发现几个月时间svn版本号就差不多增加了一倍了，大小也已经翻番，恐怖……&lt;/p&gt;

&lt;p&gt;没有google那么幸福，还没享受到千兆网，直接下载全部源码内容会非常的痛苦，其实有一些测试用的代码或者文件是可以屏蔽掉的，尤其是LayoutTest(已经默认屏蔽)，还有media/test/data下面的内容，都是一些音视频文件。&lt;/p&gt;

&lt;p&gt;附上我的.gclient文件：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;solutions = &lt;span /&gt;&lt;/p&gt;

&lt;p&gt;  { &amp;#8220;name&amp;#8221;        : &amp;#8220;src&amp;#8221;,&lt;/p&gt;

&lt;p&gt;    &amp;#8220;url&amp;#8221;         : &amp;#8220;https://src.chromium.org/chrome/trunk/src&amp;#8221;,&lt;/p&gt;

&lt;p&gt;    &amp;#8220;deps_file&amp;#8221;   : &amp;#8220;DEPS&amp;#8221;,&lt;/p&gt;

&lt;p&gt;    &amp;#8220;managed&amp;#8221;     : True,&lt;/p&gt;

&lt;p&gt;    &amp;#8220;custom_deps&amp;#8221; : {&lt;/p&gt;

&lt;p&gt;        &amp;#8220;src/media/test/data&amp;#8221;: None,&lt;/p&gt;

&lt;p&gt;        &amp;#8220;src/third_party/WebKit/LayoutTests&amp;#8221;: None,&lt;/p&gt;

&lt;p&gt;        &amp;#8220;src/content/test/data/layout_tests/LayoutTests&amp;#8221;: None,&lt;/p&gt;

&lt;p&gt;        &amp;#8220;src/chrome/tools/test/reference_build/chrome_win&amp;#8221;: None,&lt;/p&gt;

&lt;p&gt;        &amp;#8220;src/chrome_frame/tools/test/reference_build/chrome_win&amp;#8221;: None,&lt;/p&gt;

&lt;p&gt;        &amp;#8220;src/chrome/tools/test/reference_build/chrome_linux&amp;#8221;: None,&lt;/p&gt;

&lt;p&gt;        &amp;#8220;src/chrome/tools/test/reference_build/chrome_mac&amp;#8221;: None,&lt;/p&gt;

&lt;p&gt;        &amp;#8220;src/third_party/hunspell_dictionaries&amp;#8221;: None,&lt;/p&gt;

&lt;p&gt;    },&lt;/p&gt;

&lt;p&gt;    &amp;#8220;safesync_url&amp;#8221;: &amp;#8221;&amp;#8221;,&lt;/p&gt;

&lt;p&gt;  },&lt;/p&gt;

&lt;p&gt;]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>在ubuntu安装gitlab注意事项</title>
   <link href="http://gotomato.tk/2012/12/%e5%9c%a8ubuntu%e5%ae%89%e8%a3%85gitlab%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a1%b9/
/"/>
   <updated>2012-12-07T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2012/12/%e5%9c%a8ubuntu%e5%ae%89%e8%a3%85gitlab%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a1%b9/%e5%9c%a8ubuntu%e5%ae%89%e8%a3%85gitlab%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a1%b9</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;决定在新的项目里面享受一下&lt;a href='http://gitlabhq.com/'&gt;gitlab&lt;/a&gt;。安装的方法在github上面有：。&lt;/p&gt;

&lt;p&gt;在ubuntu的vps上面安装，总体还比较顺利，不过出现了安装bundle以及某句rake时候莫名奇妙的问题，检查了一下，发现文章上用的ruby是1.9.3版本，而ubuntu仓库里面默认的是1.8，难道也和python一样最新版已经没什么出现的必要了？&lt;/p&gt;

&lt;p&gt;所以应该安装到ruby 1.9.3 : “aptitude install ruby1.9.3”。&lt;/p&gt;

&lt;p&gt;另外第五步的手工创建数据库不需要自己做，因为在后面的“sudo -u gitlab bundle exec rake gitlab:app:setup RAILS_ENV=production”会尝试去建立数据库。&lt;/p&gt;

&lt;p&gt;结合数据库的维护，又从自动检查配置情况的脚本的输出来看，文档应该跟不上最新版本的变化了：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Starting diagnostics&lt;/p&gt;

&lt;p&gt;config/database.yml…………exists&lt;/p&gt;

&lt;p&gt;config/gitlab.yml…………exists&lt;/p&gt;

&lt;p&gt;/home/git/repositories/…………exists&lt;/p&gt;

&lt;p&gt;/home/git/repositories/ is writable?…………YES&lt;/p&gt;

&lt;p&gt;Can clone gitolite-admin?…………YES&lt;/p&gt;

&lt;p&gt;Can git commit?…………YES&lt;/p&gt;

&lt;p&gt;UMASK for .gitolite.rc is 0007? …………YES&lt;/p&gt;

&lt;p&gt;/home/git/.gitolite/hooks/common/post-receive exists? …………YES&lt;br /&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;再配置下nginx就能访问网站了，创建的项目默认以localhost来做主机名，要到/home/gitlab/gitlab/config/gitlab.yml里面去修改。 PS. gitlab好像修改了我mysql root密码，还没来得及去调查清楚。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>试用homebrew，一个优雅的包管理</title>
   <link href="http://gotomato.tk/2012/12/post%e8%af%95%e7%94%a8homebrew%ef%bc%8c%e4%b8%80%e4%b8%aa%e4%bc%98%e9%9b%85%e7%9a%84%e5%8c%85%e7%ae%a1%e7%90%86/
/"/>
   <updated>2012-12-06T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2012/12/post%e8%af%95%e7%94%a8homebrew%ef%bc%8c%e4%b8%80%e4%b8%aa%e4%bc%98%e9%9b%85%e7%9a%84%e5%8c%85%e7%ae%a1%e7%90%86/post%e8%af%95%e7%94%a8homebrew%ef%bc%8c%e4%b8%80%e4%b8%aa%e4%bc%98%e9%9b%85%e7%9a%84%e5%8c%85%e7%ae%a1%e7%90%86</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;因为&lt;a href='http://macports.org'&gt;macports&lt;/a&gt;全都不需要编译，这时间不值得浪费，所以就想找找看有没有二进制的包管理，找到了一个apt-get的移植版本–&lt;a href='http://www.finkproject.org/'&gt;fink&lt;/a&gt;，只可惜还没开始支持&lt;a href='http://www.apple.com/osx/'&gt;mountain lion&lt;/a&gt;。经微博朋友介绍，有一个更好的，叫Homebrew。&lt;/p&gt;

&lt;p&gt;尝试了一下，Homebrew是很有意思的一个软件，也比较现代。首先名字起的比较有意思，它的二进制包仓库（没仔细了解是不是仓库）叫bottle，刚好和homebrew(酿造)的名字对应上，默认情况下，如果有二进制可用就不进行编译。它安装的文件放在Cellar里面（在/usr/local/Cellar–Homebrew坚持把自己放在/usr/local下面，减少对系统的污染，也更加方便管理）。每个人自己可以编辑自己的formula–包规则文件，并且很好地和源（或者叫upstream–你可以pull一些私有的仓库）进行合并，这得益于homebrew是基于git的。&lt;/p&gt;

&lt;p&gt;安装homebrew很简单，&lt;a href='http://mxcl.github.com/homebrew/'&gt;官方主页&lt;/a&gt;最新的介绍，用ruby执行一句命令即可：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ruby -e &amp;#8220;$(curl -fsSkL raw.github.com/mxcl/homebrew/go)&amp;#8221;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;需要注意的是，homebrew和macports的默认位置冲突，所以需要先删除后者，参考：&lt;/p&gt;

&lt;blockquote /&gt;

&lt;p&gt;安装的过程也蛮简洁明了，一些交互的语句让人比较喜欢：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;LaotekiMacBook-Pro:elasticnodes laoyongchao$ ruby -e &amp;#8220;$(curl -fsSkL raw.github.com/mxcl/homebrew/go)&amp;#8221;&lt;/p&gt;

&lt;p&gt;/usr/local/bin/brew&lt;/p&gt;

&lt;p&gt;/usr/local/Library/…&lt;/p&gt;

&lt;p&gt;/usr/local/share/man/man1/brew.1&lt;/p&gt;

&lt;p&gt;/usr/local/.&lt;/p&gt;

&lt;p&gt;/usr/local/bin&lt;/p&gt;

&lt;p&gt;/usr/local/include&lt;/p&gt;

&lt;p&gt;/usr/local/lib&lt;/p&gt;

&lt;p&gt;/usr/local/.&lt;/p&gt;

&lt;p&gt;/usr/local/bin&lt;/p&gt;

&lt;p&gt;/usr/local/include&lt;/p&gt;

&lt;p&gt;/usr/local/lib&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Press ENTER to continue or any other key to abort&lt;/p&gt;

&lt;p&gt;Password:&lt;/p&gt;

&lt;p&gt;remote: Counting objects: 90226, done.&lt;/p&gt;

&lt;p&gt;remote: Compressing objects: 100% (41869/41869), done.&lt;/p&gt;

&lt;p&gt;remote: Total 90226 (delta 62927), reused 72135 (delta 47515)&lt;/p&gt;

&lt;p&gt;Receiving objects: 100% (90226/90226), 12.97 MiB | 149 KiB/s, done.&lt;/p&gt;

&lt;p&gt;Resolving deltas: 100% (62927/62927), done.&lt;/p&gt;

&lt;p&gt;From https://github.com/mxcl/homebrew&lt;/p&gt;

&lt;p&gt; * &lt;span&gt;new branch&lt;/span&gt;      master     -&amp;gt; origin/master&lt;/p&gt;

&lt;p&gt;HEAD is now at 201d4e8 ht 2.0.21&lt;/p&gt;

&lt;p&gt;You should run &lt;code&gt;brew doctor&amp;#39; \*before\* you install anything.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now type: brew help&lt;/p&gt;
&lt;/blockquote&gt;</content>
 </entry>
 
 <entry>
   <title>Android蓝牙串口编程需要注意的地方</title>
   <link href="http://gotomato.tk/2012/12/android%e8%93%9d%e7%89%99%e4%b8%b2%e5%8f%a3%e7%bc%96%e7%a8%8b%e9%9c%80%e8%a6%81%e6%b3%a8%e6%84%8f%e7%9a%84%e5%9c%b0%e6%96%b9/
/"/>
   <updated>2012-12-05T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2012/12/android%e8%93%9d%e7%89%99%e4%b8%b2%e5%8f%a3%e7%bc%96%e7%a8%8b%e9%9c%80%e8%a6%81%e6%b3%a8%e6%84%8f%e7%9a%84%e5%9c%b0%e6%96%b9/android%e8%93%9d%e7%89%99%e4%b8%b2%e5%8f%a3%e7%bc%96%e7%a8%8b%e9%9c%80%e8%a6%81%e6%b3%a8%e6%84%8f%e7%9a%84%e5%9c%b0%e6%96%b9</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;如果要在Android设备上面用蓝牙串口进行通信的话（比如一些单片机Arduino设备通常使用这种方式），能比较容易就获取到相关资料，自带的BluetoothChat例子就是不错的教程，这个例子可以使得两台设备进行串口上面的对话。&lt;/p&gt;

&lt;p&gt;但需要注意的一点是，蓝牙协议上面的服务是有很多种的，譬如ftp、拨号网络、同步等等，这些服务由唯一的UUID来标识，而创建串口的时候，是需要在设备句柄上面指定服务的UUID的。&lt;/p&gt;

&lt;p&gt;Android的文档刚(&lt;a href='http://developer.android.com/reference/android/bluetooth/BluetoothDevice.html'&gt;BluetoothDevice&lt;/a&gt;)好也说明了这点：&lt;/p&gt;

&lt;p&gt;BluetoothSocket createRfcommSocketToServiceRecord (UUID uuid)&lt;/p&gt;

&lt;p&gt;Hint: If you are connecting to a Bluetooth serial board then try using the well-known SPP UUID 00001101-0000-1000-8000-00805F9B34FB. However if you are connecting to an Android peer then please generate your own unique UUID.&lt;/p&gt;

&lt;p&gt;另外，附上一些蓝牙服务的UUID：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ServiceDiscoveryServerServiceClassID_UUID = &amp;#8216;{00001000-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BrowseGroupDescriptorServiceClassID_UUID = &amp;#8216;{00001001-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PublicBrowseGroupServiceClass_UUID = &amp;#8216;{00001002-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#蓝牙串口服务 &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SerialPortServiceClass_UUID = &amp;#8216;{00001101-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LANAccessUsingPPPServiceClass_UUID = &amp;#8216;{00001102-0000-1000-8000-00805F9B34FB}&amp;#8217;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#拨号网络服务 &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DialupNetworkingServiceClass_UUID = &amp;#8216;{00001103-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#信息同步服务 &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IrMCSyncServiceClass_UUID = &amp;#8216;{00001104-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SDP_OBEXObjectPushServiceClass_UUID = &amp;#8216;{00001105-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#文件传输服务 &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OBEXFileTransferServiceClass_UUID = &amp;#8216;{00001106-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IrMCSyncCommandServiceClass_UUID = &amp;#8216;{00001107-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SDP_HeadsetServiceClass_UUID = &amp;#8216;{00001108-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CordlessTelephonyServiceClass_UUID = &amp;#8216;{00001109-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SDP_AudioSourceServiceClass_UUID = &amp;#8216;{0000110A-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SDP_AudioSinkServiceClass_UUID = &amp;#8216;{0000110B-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SDP_AVRemoteControlTargetServiceClass_UUID = &amp;#8216;{0000110C-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SDP_AdvancedAudioDistributionServiceClass_UUID = &amp;#8216;{0000110D-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SDP_AVRemoteControlServiceClass_UUID = &amp;#8216;{0000110E-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;VideoConferencingServiceClass_UUID = &amp;#8216;{0000110F-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IntercomServiceClass_UUID = &amp;#8216;{00001110-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#蓝牙传真服务 &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FaxServiceClass_UUID = &amp;#8216;{00001111-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HeadsetAudioGatewayServiceClass_UUID = &amp;#8216;{00001112-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WAPServiceClass_UUID = &amp;#8216;{00001113-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WAPClientServiceClass_UUID = &amp;#8216;{00001114-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#个人局域网服务 &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PANUServiceClass_UUID = &amp;#8216;{00001115-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#个人局域网服务 &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NAPServiceClass_UUID = &amp;#8216;{00001116-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#个人局域网服务 &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GNServiceClass_UUID = &amp;#8216;{00001117-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DirectPrintingServiceClass_UUID = &amp;#8216;{00001118-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ReferencePrintingServiceClass_UUID = &amp;#8216;{00001119-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ImagingServiceClass_UUID = &amp;#8216;{0000111A-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ImagingResponderServiceClass_UUID = &amp;#8216;{0000111B-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ImagingAutomaticArchiveServiceClass_UUID = &amp;#8216;{0000111C-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ImagingReferenceObjectsServiceClass_UUID = &amp;#8216;{0000111D-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SDP_HandsfreeServiceClass_UUID = &amp;#8216;{0000111E-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HandsfreeAudioGatewayServiceClass_UUID = &amp;#8216;{0000111F-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DirectPrintingReferenceObjectsServiceClass_UUID = &amp;#8216;{00001120-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ReflectedUIServiceClass_UUID = &amp;#8216;{00001121-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BasicPringingServiceClass_UUID = &amp;#8216;{00001122-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PrintingStatusServiceClass_UUID = &amp;#8216;{00001123-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#人机输入服务 &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HumanInterfaceDeviceServiceClass_UUID = &amp;#8216;{00001124-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HardcopyCableReplacementServiceClass_UUID = &amp;#8216;{00001125-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#蓝牙打印服务 &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HCRPrintServiceClass_UUID = &amp;#8216;{00001126-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HCRScanServiceClass_UUID = &amp;#8216;{00001127-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CommonISDNAccessServiceClass_UUID = &amp;#8216;{00001128-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;VideoConferencingGWServiceClass_UUID = &amp;#8216;{00001129-0000-1000-8000-00805F9B34FB}&amp;#8217;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UDIMTServiceClass_UUID = &amp;#8216;{0000112A-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UDITAServiceClass_UUID = &amp;#8216;{0000112B-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AudioVideoServiceClass_UUID = &amp;#8216;{0000112C-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SIMAccessServiceClass_UUID = &amp;#8216;{0000112D-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PnPInformationServiceClass_UUID = &amp;#8216;{00001200-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GenericNetworkingServiceClass_UUID = &amp;#8216;{00001201-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GenericFileTransferServiceClass_UUID = &amp;#8216;{00001202-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GenericAudioServiceClass_UUID = &amp;#8216;{00001203-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GenericTelephonyServiceClass_UUID = &amp;#8216;{00001204-0000-1000-8000-00805F9B34FB}&amp;#8217; &lt;/strong&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>关于职业的感想</title>
   <link href="http://gotomato.tk/2012/12/%e5%85%b3%e4%ba%8e%e8%81%8c%e4%b8%9a%e7%9a%84%e6%84%9f%e6%83%b3/"/>
   <updated>2012-12-05T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2012/12/%e5%85%b3%e4%ba%8e%e8%81%8c%e4%b8%9a%e7%9a%84%e6%84%9f%e6%83%b3</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;今天和很久没聊的54在QQ上聊了一下，各自交流了一下近况，发现他要有大动作了–做一个独立游戏开发者。这起初让我很吃惊，因为他原来只是一个普通的美工而已。&lt;/p&gt;

&lt;p&gt;仔细想想，其实也没什么值得惊讶的，他就是一个这样的人。最初他不远千里一个人来到公司的时候，比刚毕业的我还小两三岁；等他觉得自己的职业发展在公司比较受限所以离开的时候，公司正在经历发展最快的阶段，前景不可限量；他放弃本地已经不错的工作而选择北漂的时候，我们都还在公司期待着什么；当他最后告诉我，自己已经学习了objective-c，并且最终选定了某html5平台作为开发平台，开发自己的游戏，并且已经有demo截图的时候，我也不必惊讶。&lt;/p&gt;

&lt;p&gt;在我现在看来，好的职业规划不外乎两种：1.根据自己的特长、现状制定目标，不断地找好自己的位置并且寻求图片，最终达到专家或者有机会成就自己的事业。2.有计划有准备地跳出圈子去看一看–当然自己在心理上要能够承受自己的行为带来的风险，开阔自己的眼界，确定自己的目标并且为之努力。&lt;/p&gt;

&lt;p&gt;不论怎么样，要做得好，做得成功，看来都很需要自己有足够的胆识以及行动力。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>openvpn下预防dns污染</title>
   <link href="http://gotomato.tk/2012/11/openvpn%e4%b8%8b%e9%a2%84%e9%98%b2dns%e6%b1%a1%e6%9f%93/"/>
   <updated>2012-11-30T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2012/11/openvpn%e4%b8%8b%e9%a2%84%e9%98%b2dns%e6%b1%a1%e6%9f%93</id>
   <content type="html">&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;由于众所周知的原因，我们访问某些网站的时候会遭到封锁，因此不少人选择购买或者自己搭建vpn的方案（当然也可以自己编写软件搭建私有的线路，类似vpn，又或者选择代理–明文代理理论上很容易被墙），我选择了在自己的vps上面搭建openvpn服务。&lt;/p&gt;

&lt;p&gt;本以为搭建好了就没什么问题了，但发现这两天访问某些网站间断性的无响应，或者干脆就很长一段时间都无法访问。经过调试猛然发现，dns结果被篡改了！&lt;/p&gt;

&lt;p&gt;如果访问数据完全经过vpn的话，那是不存在被篡改的行为的，但在使用openvpn的时候，有两种情况会发生dns查询不经过vpn而走原来的路由：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;没有配置成服务器下发dns，导致使用了局域网内的dns（那个dns在查询上级的时候遭到了污染）。解决方案是通过push选项下发一个公网的dns，我使用了google的：push “dhcp-option DNS 8.8.8.8″&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;设置了路由表，并不是所有流量默认走vpn网关，这种情况多数是因为自己单独设置了路由表，只让部分路由走vpn，以达到速度和效果权衡。我直接从网上找了一个国外路由表，其中没包括8.0.0.0/8。现在加上去就好了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果不是用vpn并且要防止污染的话，也可以在本地用程序来进行处理，具体参考：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;月光博客：http://www.williamlong.info/archives/2184.html&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;pydnsproxy项目：https://code.google.com/p/pydnsproxy/&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;最后，附上我openvpn的配置：&lt;br /&gt;dev tun&lt;br /&gt;proto udp&lt;br /&gt;port 2294&lt;br /&gt;ca /etc/openvpn/easy-rsa/2.0/keys/ca.crt&lt;br /&gt;cert /etc/openvpn/easy-rsa/2.0/keys/server.crt&lt;br /&gt;key /etc/openvpn/easy-rsa/2.0/keys/server.key&lt;br /&gt;dh /etc/openvpn/easy-rsa/2.0/keys/dh1024.pem&lt;br /&gt;user nobody&lt;br /&gt;group nogroup&lt;br /&gt;server 10.8.0.0 255.255.255.0&lt;/p&gt;

&lt;p&gt;keepalive 20 120&lt;br /&gt;persist-key&lt;br /&gt;persist-tun&lt;/p&gt;

&lt;h1 id='userpass_auth_from_mysql'&gt;user/pass auth from mysql&lt;/h1&gt;

&lt;h1 id='plugin_openvpnauthpamso_openvpn'&gt;plugin ./openvpn-auth-pam.so openvpn&lt;/h1&gt;

&lt;h1 id='clientcertnotrequired'&gt;client-cert-not-required&lt;/h1&gt;

&lt;h1 id='usernameascommonname'&gt;username-as-common-name&lt;/h1&gt;

&lt;p&gt;client-to-client&lt;/p&gt;

&lt;p&gt;; push “redirect-gateway def1″ # see route section&lt;br /&gt;push “dhcp-option DNS 8.8.8.8″&lt;br /&gt;push “dhcp-option DNS 8.8.4.4″&lt;/p&gt;

&lt;p&gt;comp-lzo&lt;/p&gt;

&lt;p&gt;max-clients 15&lt;br /&gt;status status/udp.log&lt;br /&gt;log-append /var/log/openvpn/udp.log&lt;br /&gt;verb 3&lt;br /&gt;mute 5&lt;/p&gt;

&lt;h15&gt;route section&lt;/h15&gt;

&lt;h1 id='id1'&gt;确保注释掉上面的推送默认路由&lt;/h1&gt;

&lt;h1 id='vpnvpn'&gt;然后设置哪些网段由VPN由路由。下面的示例是北美网段由VPN路由。&lt;/h1&gt;

&lt;p&gt;push “route 8.0.0.0 255.0.0.0″&lt;br /&gt;push “route 24.0.0.0 255.0.0.0″&lt;br /&gt;push “route 63.0.0.0 255.0.0.0″&lt;br /&gt;push “route 64.0.0.0 255.0.0.0″&lt;br /&gt;push “route 65.0.0.0 255.0.0.0″&lt;br /&gt;push “route 66.0.0.0 255.0.0.0″&lt;br /&gt;push “route 67.0.0.0 255.0.0.0″&lt;br /&gt;push “route 68.0.0.0 255.0.0.0″&lt;br /&gt;push “route 69.0.0.0 255.0.0.0″&lt;br /&gt;push “route 70.0.0.0 255.0.0.0″&lt;br /&gt;push “route 71.0.0.0 255.0.0.0″&lt;br /&gt;push “route 72.0.0.0 255.0.0.0″&lt;br /&gt;push “route 73.0.0.0 255.0.0.0″&lt;br /&gt;push “route 74.0.0.0 255.0.0.0″&lt;br /&gt;push “route 75.0.0.0 255.0.0.0″&lt;br /&gt;push “route 76.0.0.0 255.0.0.0″&lt;br /&gt;push “route 96.0.0.0 255.0.0.0″&lt;br /&gt;push “route 97.0.0.0 255.0.0.0″&lt;br /&gt;push “route 98.0.0.0 255.0.0.0″&lt;br /&gt;push “route 99.0.0.0 255.0.0.0″&lt;br /&gt;push “route 108.0.0.0 255.0.0.0″&lt;br /&gt;push “route 173.0.0.0 255.0.0.0″&lt;br /&gt;push “route 174.0.0.0 255.0.0.0″&lt;br /&gt;push “route 184.0.0.0 255.0.0.0″&lt;br /&gt;push “route 199.0.0.0 255.0.0.0″&lt;br /&gt;push “route 204.0.0.0 255.0.0.0″&lt;br /&gt;push “route 205.0.0.0 255.0.0.0″&lt;br /&gt;push “route 206.0.0.0 255.0.0.0″&lt;br /&gt;push “route 207.0.0.0 255.0.0.0″&lt;br /&gt;push “route 208.0.0.0 255.0.0.0″&lt;br /&gt;push “route 209.0.0.0 255.0.0.0″&lt;br /&gt;push “route 216.0.0.0 255.0.0.0″&lt;/p&gt;

&lt;h1 id='vpn'&gt;最后，注意设置VPN服务器本身要通过客户端原来的网关访问。这点也很关键。如果客户端在上面路由范围的话&lt;/h1&gt;

&lt;p&gt;push “route 我的vpn地址 255.255.255.255 net_gateway”&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Luke同学的牢骚</title>
   <link href="http://gotomato.tk/2012/11/luke%e5%90%8c%e5%ad%a6%e7%9a%84%e7%89%a2%e9%aa%9a/"/>
   <updated>2012-11-29T00:00:00+08:00</updated>
   <id>http://gotomato.tk/2012/11/luke%e5%90%8c%e5%ad%a6%e7%9a%84%e7%89%a2%e9%aa%9a</id>
   <content type="html">&lt;h1 id='luke'&gt;Luke同学的牢骚&lt;/h1&gt;

&lt;p&gt;已经很久很久很久没有写blog了。&lt;/p&gt;

&lt;p&gt;同时，已经颓废了很久很久很久了–可是，这和没有写blog有什么联系吗？不能说是强关联，但实际上没有写blog，没有认真的去做思考和总结，却也是一种生活状态的表现。&lt;/p&gt;

&lt;p&gt;每次回想自己的生活，都感觉浑浑噩噩的，实在是不应该。在公司工作的时候，一般以完成任务为己任（实际上就连完成任务都是拖拖拉拉的），下班就什么都随便看看，有广度，但是没有深度；自己创业的阶段，虽然说更加有目标去学习，但不注重总结和思考，也不利于知识的开发和沉淀；总的来看，缺乏生活和工作的思考和总结，不利于自己的规划。&lt;/p&gt;

&lt;p&gt;所以，我想还是在网上发发牢骚吧，重要的是不要忘记发牢骚之余，真正做到了思考和总结。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Jekyll Introduction</title>
   <link href="http://gotomato.tk/lessons/2011/12/29/jekyll-introduction"/>
   <updated>2011-12-29T00:00:00+08:00</updated>
   <id>http://gotomato.tk/lessons/2011/12/29/jekyll-introduction</id>
   <content type="html">&lt;p&gt;This Jekyll introduction will outline specifically what Jekyll is and why you would want to use it. Directly following the intro we&amp;#8217;ll learn exactly &lt;em&gt;how&lt;/em&gt; Jekyll does what it does.&lt;/p&gt;

&lt;h2 id='overview'&gt;Overview&lt;/h2&gt;

&lt;h3 id='what_is_jekyll'&gt;What is Jekyll?&lt;/h3&gt;

&lt;p&gt;Jekyll is a parsing engine bundled as a ruby gem used to build static websites from dynamic components such as templates, partials, liquid code, markdown, etc. Jekyll is known as &amp;#8220;a simple, blog aware, static site generator&amp;#8221;.&lt;/p&gt;

&lt;h3 id='examples'&gt;Examples&lt;/h3&gt;

&lt;p&gt;This website is created with Jekyll. &lt;a href='https://github.com/mojombo/jekyll/wiki/Sites'&gt;Other Jekyll websites&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id='what_does_jekyll_do'&gt;What does Jekyll Do?&lt;/h3&gt;

&lt;p&gt;Jekyll is a ruby gem you install on your local system. Once there you can call &lt;code&gt;jekyll --server&lt;/code&gt; on a directory and provided that directory is setup in a way jekyll expects, it will do magic stuff like parse markdown/textile files, compute categories, tags, permalinks, and construct your pages from layout templates and partials.&lt;/p&gt;

&lt;p&gt;Once parsed, Jekyll stores the result in a self-contained static &lt;code&gt;_site&lt;/code&gt; folder. The intention here is that you can serve all contents in this folder statically from a plain static web-server.&lt;/p&gt;

&lt;p&gt;You can think of Jekyll as a normalish dynamic blog but rather than parsing content, templates, and tags on each request, Jekyll does this once &lt;em&gt;beforehand&lt;/em&gt; and caches the &lt;em&gt;entire website&lt;/em&gt; in a folder for serving statically.&lt;/p&gt;

&lt;h3 id='jekyll_is_not_blogging_software'&gt;Jekyll is Not Blogging Software&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Jekyll is a parsing engine.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jekyll does not come with any content nor does it have any templates or design elements. This is a common source of confusion when getting started. Jekyll does not come with anything you actually use or see on your website - you have to make it.&lt;/p&gt;

&lt;h3 id='why_should_i_care'&gt;Why Should I Care?&lt;/h3&gt;

&lt;p&gt;Jekyll is very minimalistic and very efficient. The most important thing to realize about Jekyll is that it creates a static representation of your website requiring only a static web-server. Traditional dynamic blogs like Wordpress require a database and server-side code. Heavily trafficked dynamic blogs must employ a caching layer that ultimately performs the same job Jekyll sets out to do; serve static content.&lt;/p&gt;

&lt;p&gt;Therefore if you like to keep things simple and you prefer the command-line over an admin panel UI then give Jekyll a try.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developers like Jekyll because we can write content like we write code:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ability to write content in markdown or textile in your favorite text-editor.&lt;/li&gt;

&lt;li&gt;Ability to write and preview your content via localhost.&lt;/li&gt;

&lt;li&gt;No internet connection required.&lt;/li&gt;

&lt;li&gt;Ability to publish via git.&lt;/li&gt;

&lt;li&gt;Ability to host your blog on a static web-server.&lt;/li&gt;

&lt;li&gt;Ability to host freely on GitHub Pages.&lt;/li&gt;

&lt;li&gt;No database required.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id='how_jekyll_works'&gt;How Jekyll Works&lt;/h1&gt;

&lt;p&gt;The following is a complete but concise outline of exactly how Jekyll works.&lt;/p&gt;

&lt;p&gt;Be aware that core concepts are introduced in rapid succession without code examples. This information is not intended to specifically teach you how to do anything, rather it is intended to give you the &lt;em&gt;full picture&lt;/em&gt; relative to what is going on in Jekyll-world.&lt;/p&gt;

&lt;p&gt;Learning these core concepts should help you avoid common frustrations and ultimately help you better understand the code examples contained throughout Jekyll-Bootstrap.&lt;/p&gt;

&lt;h2 id='initial_setup'&gt;Initial Setup&lt;/h2&gt;

&lt;p&gt;After &lt;a href='/index.html#start-now'&gt;installing jekyll&lt;/a&gt; you&amp;#8217;ll need to format your website directory in a way jekyll expects. Jekyll-bootstrap conveniently provides the base directory format.&lt;/p&gt;

&lt;h3 id='the_jekyll_application_base_format'&gt;The Jekyll Application Base Format&lt;/h3&gt;

&lt;p&gt;Jekyll expects your website directory to be laid out like so:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.
|-- _config.yml
|-- _includes
|-- _layouts
|   |-- default.html
|   |-- post.html
|-- _posts
|   |-- 20011-10-25-open-source-is-good.markdown
|   |-- 20011-04-26-hello-world.markdown
|-- _site
|-- index.html
|-- assets
    |-- css
        |-- style.css
    |-- javascripts&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;_config.yml&lt;/strong&gt;&lt;br /&gt;Stores configuration data.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;_includes&lt;/strong&gt;&lt;br /&gt;This folder is for partial views.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;_layouts&lt;/strong&gt; &lt;br /&gt;This folder is for the main templates your content will be inserted into. You can have different layouts for different pages or page sections.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;_posts&lt;/strong&gt;&lt;br /&gt;This folder contains your dynamic content/posts. the naming format is required to be &lt;code&gt;@YEAR-MONTH-DATE-title.MARKUP@&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;_site&lt;/strong&gt;&lt;br /&gt;This is where the generated site will be placed once Jekyll is done transforming it.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;assets&lt;/strong&gt;&lt;br /&gt;This folder is not part of the standard jekyll structure. The assets folder represents &lt;em&gt;any generic&lt;/em&gt; folder you happen to create in your root directory. Directories and files not properly formatted for jekyll will be left untouched for you to serve normally.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(read more: &lt;a href='https://github.com/mojombo/jekyll/wiki/Usage'&gt;https://github.com/mojombo/jekyll/wiki/Usage&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id='jekyll_configuration'&gt;Jekyll Configuration&lt;/h3&gt;

&lt;p&gt;Jekyll supports various configuration options that are fully outlined here: &lt;a href='https://github.com/mojombo/jekyll/wiki/Configuration'&gt;https://github.com/mojombo/jekyll/wiki/Configuration&lt;/a&gt;&lt;/p&gt;

&lt;h2 id='content_in_jekyll'&gt;Content in Jekyll&lt;/h2&gt;

&lt;p&gt;Content in Jekyll is either a post or a page. These content &amp;#8220;objects&amp;#8221; get inserted into one or more templates to build the final output for its respective static-page.&lt;/p&gt;

&lt;h3 id='posts_and_pages'&gt;Posts and Pages&lt;/h3&gt;

&lt;p&gt;Both posts and pages should be written in markdown, textile, or HTML and may also contain Liquid templating syntax. Both posts and pages can have meta-data assigned on a per-page basis such as title, url path, as well as arbitrary custom meta-data.&lt;/p&gt;

&lt;h3 id='working_with_posts'&gt;Working With Posts&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Creating a Post&lt;/strong&gt; &lt;br /&gt;Posts are created by properly formatting a file and placing it the &lt;code&gt;_posts&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Formatting&lt;/strong&gt;&lt;br /&gt;A post must have a valid filename in the form &lt;code&gt;YEAR-MONTH-DATE-title.MARKUP&lt;/code&gt; and be placed in the &lt;code&gt;_posts&lt;/code&gt; directory. If the data format is invalid Jekyll will not recognize the file as a post. The date and title are automatically parsed from the filename of the post file. Additionally, each file must have &lt;a href='https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter'&gt;YAML Front-Matter&lt;/a&gt; prepended to its content. YAML Front-Matter is a valid YAML syntax specifying meta-data for the given file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Order&lt;/strong&gt;&lt;br /&gt;Ordering is an important part of Jekyll but it is hard to specify a custom ordering strategy. Only reverse chronological and chronological ordering is supported in Jekyll.&lt;/p&gt;

&lt;p&gt;Since the date is hard-coded into the filename format, to change the order, you must change the dates in the filenames.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt; &lt;br /&gt;Posts can have tags associated with them as part of their meta-data. Tags may be placed on posts by providing them in the post&amp;#8217;s YAML front matter. You have access to the post-specific tags in the templates. These tags also get added to the sitewide collection.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Categories&lt;/strong&gt; &lt;br /&gt;Posts may be categorized by providing one or more categories in the YAML front matter. Categories offer more significance over tags in that they can be reflected in the URL path to the given post. Note categories in Jekyll work in a specific way. If you define more than one category you are defining a category hierarchy &amp;#8220;set&amp;#8221;. Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title :  Hello World
categories : [lessons, beginner]
---&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This defines the category hierarchy &amp;#8220;lessons/beginner&amp;#8221;. Note this is &lt;em&gt;one category&lt;/em&gt; node in Jekyll. You won&amp;#8217;t find &amp;#8220;lessons&amp;#8221; and &amp;#8220;beginner&amp;#8221; as two separate categories unless you define them elsewhere as singular categories.&lt;/p&gt;

&lt;h3 id='working_with_pages'&gt;Working With Pages&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Creating a Page&lt;/strong&gt;&lt;br /&gt;Pages are created by properly formatting a file and placing it anywhere in the root directory or subdirectories that do &lt;em&gt;not&lt;/em&gt; start with an underscore.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Formatting&lt;/strong&gt;&lt;br /&gt;In order to register as a Jekyll page the file must contain &lt;a href='https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter'&gt;YAML Front-Matter&lt;/a&gt;. Registering a page means 1) that Jekyll will process the page and 2) that the page object will be available in the &lt;code&gt;site.pages&lt;/code&gt; array for inclusion into your templates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Categories and Tags&lt;/strong&gt;&lt;br /&gt;Pages do not compute categories nor tags so defining them will have no effect.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sub-Directories&lt;/strong&gt;&lt;br /&gt;If pages are defined in sub-directories, the path to the page will be reflected in the url. Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.
|-- people
    |-- bob
        |-- essay.html&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This page will be available at &lt;code&gt;http://yourdomain.com/people/bob/essay.html&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Recommended Pages&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;index.html&lt;/strong&gt;&lt;br /&gt;You will always want to define the root index.html page as this will display on your root URL.&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;404.html&lt;/strong&gt;&lt;br /&gt;Create a root 404.html page and GitHub Pages will serve it as your 404 response.&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;sitemap.html&lt;/strong&gt;&lt;br /&gt;Generating a sitemap is good practice for SEO.&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;about.html&lt;/strong&gt;&lt;br /&gt;A nice about page is easy to do and gives the human perspective to your website.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='templates_in_jekyll'&gt;Templates in Jekyll&lt;/h2&gt;

&lt;p&gt;Templates are used to contain a page&amp;#8217;s or post&amp;#8217;s content. All templates have access to a global site object variable: &lt;code&gt;site&lt;/code&gt; as well as a page object variable: &lt;code&gt;page&lt;/code&gt;. The site variable holds all accessible content and metadata relative to the site. The page variable holds accessible data for the given page or post being rendered at that point.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create a Template&lt;/strong&gt;&lt;br /&gt;Templates are created by properly formatting a file and placing it in the &lt;code&gt;_layouts&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Formatting&lt;/strong&gt;&lt;br /&gt;Templates should be coded in HTML and contain YAML Front Matter. All templates can contain Liquid code to work with your site&amp;#8217;s data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rending Page/Post Content in a Template&lt;/strong&gt;&lt;br /&gt;There is a special variable in all templates named : &lt;code&gt;content&lt;/code&gt;. The &lt;code&gt;content&lt;/code&gt; variable holds the page/post content including any sub-template content previously defined. Render the content variable wherever you want your main content to be injected into your template:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
&amp;lt;body&amp;gt;
  &amp;lt;div id=&quot;sidebar&quot;&amp;gt; ... &amp;lt;/div&amp;gt;
  &amp;lt;div id=&quot;main&quot;&amp;gt;
    &amp;#123;{content}&amp;#125;
  &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
...&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id='subtemplates'&gt;Sub-Templates&lt;/h3&gt;

&lt;p&gt;Sub-templates are exactly templates with the only difference being they define another &amp;#8220;root&amp;#8221; layout/template within their YAML Front Matter. This essentially means a template will render inside of another template.&lt;/p&gt;

&lt;h3 id='includes'&gt;Includes&lt;/h3&gt;

&lt;p&gt;In Jekyll you can define include files by placing them in the &lt;code&gt;_includes&lt;/code&gt; folder. Includes are NOT templates, rather they are just code snippets that get included into templates. In this way, you can treat the code inside includes as if it was native to the parent template.&lt;/p&gt;

&lt;p&gt;Any valid template code may be used in includes.&lt;/p&gt;

&lt;h2 id='using_liquid_for_templating'&gt;Using Liquid for Templating&lt;/h2&gt;

&lt;p&gt;Templating is perhaps the most confusing and frustrating part of Jekyll. This is mainly due to the fact that Jekyll templates must use the Liquid Templating Language.&lt;/p&gt;

&lt;h3 id='what_is_liquid'&gt;What is Liquid?&lt;/h3&gt;

&lt;p&gt;&lt;a href='https://github.com/Shopify/liquid'&gt;Liquid&lt;/a&gt; is a secure templating language developed by &lt;a href='http://shopify.com'&gt;Shopify&lt;/a&gt;. Liquid is designed for end-users to be able to execute logic within template files without imposing any security risk on the hosting server.&lt;/p&gt;

&lt;p&gt;Jekyll uses Liquid to generate the post content within the final page layout structure and as the primary interface for working with your site and post/page data.&lt;/p&gt;

&lt;h3 id='why_do_we_have_to_use_liquid'&gt;Why Do We Have to Use Liquid?&lt;/h3&gt;

&lt;p&gt;GitHub uses Jekyll to power &lt;a href='http://pages.github.com/'&gt;GitHub Pages&lt;/a&gt;. GitHub cannot afford to run arbitrary code on their servers so they lock developers down via Liquid.&lt;/p&gt;

&lt;h3 id='liquid_is_not_programmerfriendly'&gt;Liquid is Not Programmer-Friendly.&lt;/h3&gt;

&lt;p&gt;The short story is liquid is not real code and its not intended to execute real code. The point being you can&amp;#8217;t do jackshit in liquid that hasn&amp;#8217;t been allowed explicitly by the implementation. What&amp;#8217;s more you can only access data-structures that have been explicitly passed to the template.&lt;/p&gt;

&lt;p&gt;In Jekyll&amp;#8217;s case it is not possible to alter what is passed to Liquid without hacking the gem or running custom plugins. Both of which cannot be supported by GitHub Pages.&lt;/p&gt;

&lt;p&gt;As a programmer - this is very frustrating.&lt;/p&gt;

&lt;p&gt;But rather than look a gift horse in the mouth we are going to suck it up and view it as an opportunity to work around limitations and adopt client-side solutions when possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Aside&lt;/strong&gt; &lt;br /&gt;My personal stance is to not invest time trying to hack liquid. It&amp;#8217;s really unnecessary &lt;em&gt;from a programmer&amp;#8217;s&lt;/em&gt; perspective. That is to say if you have the ability to run custom plugins (i.e. run arbitrary ruby code) you are better off sticking with ruby. Toward that end I&amp;#8217;ve built &lt;a href='http://github.com/plusjade/mustache-with-jekyll'&gt;Mustache-with-Jekyll&lt;/a&gt;&lt;/p&gt;

&lt;h2 id='static_assets'&gt;Static Assets&lt;/h2&gt;

&lt;p&gt;Static assets are any file in the root or non-underscored subfolders that are not pages. That is they have no valid YAML Front Matter and are thus not treated as Jekyll Pages.&lt;/p&gt;

&lt;p&gt;Static assets should be used for images, css, and javascript files.&lt;/p&gt;

&lt;h2 id='how_jekyll_parses_files'&gt;How Jekyll Parses Files&lt;/h2&gt;

&lt;p&gt;Remember Jekyll is a processing engine. There are two main types of parsing in Jekyll.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Content parsing.&lt;/strong&gt; &lt;br /&gt;This is done with textile or markdown.&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;Template parsing.&lt;/strong&gt; &lt;br /&gt;This is done with the liquid templating language.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And thus there are two main types of file formats needed for this parsing.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Post and Page files.&lt;/strong&gt;&lt;br /&gt;All content in Jekyll is either a post or a page so valid posts and pages are parsed with markdown or textile.&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;Template files.&lt;/strong&gt; &lt;br /&gt;These files go in &lt;code&gt;_layouts&lt;/code&gt; folder and contain your blogs &lt;strong&gt;templates&lt;/strong&gt;. They should be made in HTML with the help of Liquid syntax. Since include files are simply injected into templates they are essentially parsed as if they were native to the template.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Arbitrary files and folders.&lt;/strong&gt; &lt;br /&gt;Files that &lt;em&gt;are not&lt;/em&gt; valid pages are treated as static content and pass through Jekyll untouched and reside on your blog in the exact structure and format they originally existed in.&lt;/p&gt;

&lt;h3 id='formatting_files_for_parsing'&gt;Formatting Files for Parsing.&lt;/h3&gt;

&lt;p&gt;We&amp;#8217;ve outlined the need for valid formatting using &lt;strong&gt;YAML Front Matter&lt;/strong&gt;. Templates, posts, and pages all need to provide valid YAML Front Matter even if the Matter is empty. This is the only way Jekyll knows you want the file processed.&lt;/p&gt;

&lt;p&gt;YAML Front Matter must be prepended to the top of template/post/page files:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
category : pages
tags : [how-to, jekyll]
---

... contents ...&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Three hyphens on a new line start the Front-Matter block and three hyphens on a new line end the block. The data inside the block must be valid YAML.&lt;/p&gt;

&lt;p&gt;Configuration parameters for YAML Front-Matter is outlined here: &lt;a href='https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter'&gt;A comprehensive explanation of YAML Front Matter&lt;/a&gt;&lt;/p&gt;

&lt;h4 id='defining_layouts_for_posts_and_templates_parsing'&gt;Defining Layouts for Posts and Templates Parsing.&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;layout&lt;/code&gt; parameter in the YAML Front Matter defines the template file for which the given post or template should be injected into. If a template file specifies its own layout, it is effectively being used as a &lt;code&gt;sub-template.&lt;/code&gt; That is to say loading a post file into a template file that refers to another template file with work in the way you&amp;#8217;d expect; as a nested sub-template.&lt;/p&gt;

&lt;h2 id='how_jekyll_generates_the_final_static_files'&gt;How Jekyll Generates the Final Static Files.&lt;/h2&gt;

&lt;p&gt;Ultimately, Jekyll&amp;#8217;s job is to generate a static representation of your website. The following is an outline of how that&amp;#8217;s done:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Jekyll collects data.&lt;/strong&gt; &lt;br /&gt;Jekyll scans the posts directory and collects all posts files as post objects. It then scans the layout assets and collects those and finally scans other directories in search of pages.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Jekyll computes data.&lt;/strong&gt; &lt;br /&gt;Jekyll takes these objects, computes metadata (permalinks, tags, categories, titles, dates) from them and constructs one big &lt;code&gt;site&lt;/code&gt; object that holds all the posts, pages, layouts, and respective metadata. At this stage your site is one big computed ruby object.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Jekyll liquifies posts and templates.&lt;/strong&gt;&lt;br /&gt;Next jekyll loops through each post file and converts (through markdown or textile) and &lt;strong&gt;liquifies&lt;/strong&gt; the post inside of its respective layout(s). Once the post is parsed and liquified inside the the proper layout structure, the layout itself is &amp;#8220;liquified&amp;#8221;. &lt;br /&gt;&lt;strong&gt;Liquification&lt;/strong&gt; is defined as follows: Jekyll initiates a Liquid template, and passes a simpler hash representation of the ruby site object as well as a simpler hash representation of the ruby post object. These simplified data structures are what you have access to in the templates.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Jekyll generates output.&lt;/strong&gt; &lt;br /&gt;Finally the liquid templates are &amp;#8220;rendered&amp;#8221;, thereby processing any liquid syntax provided in the templates and saving the final, static representation of the file.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Notes.&lt;/strong&gt;&lt;br /&gt;Because Jekyll computes the entire site in one fell swoop, each template is given access to a global &lt;code&gt;site&lt;/code&gt; hash that contains useful data. It is this data that you&amp;#8217;ll iterate through and format using the Liquid tags and filters in order to render it onto a given page.&lt;/p&gt;

&lt;p&gt;Remember, in Jekyll you are an end-user. Your API has only two components:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The manner in which you setup your directory.&lt;/li&gt;

&lt;li&gt;The liquid syntax and variables passed into the liquid templates.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All the data objects available to you in the templates via Liquid are outlined in the &lt;strong&gt;API Section&lt;/strong&gt; of Jekyll-Bootstrap. You can also read the original documentation here: &lt;a href='https://github.com/mojombo/jekyll/wiki/Template-Data'&gt;https://github.com/mojombo/jekyll/wiki/Template-Data&lt;/a&gt;&lt;/p&gt;

&lt;h2 id='conclusion'&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I hope this paints a clearer picture of what Jekyll is doing and why it works the way it does. As noted, our main programming constraint is the fact that our API is limited to what is accessible via Liquid and Liquid only.&lt;/p&gt;

&lt;p&gt;Jekyll-bootstrap is intended to provide helper methods and strategies aimed at making it more intuitive and easier to work with Jekyll =)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you&lt;/strong&gt; for reading this far.&lt;/p&gt;

&lt;h2 id='next_steps'&gt;Next Steps&lt;/h2&gt;

&lt;p&gt;Please take a look at &lt;a href='' /&gt; or jump right into &lt;a href=''&gt;Usage&lt;/a&gt; if you&amp;#8217;d like.&lt;/p&gt;</content>
 </entry>
 
 
</feed>